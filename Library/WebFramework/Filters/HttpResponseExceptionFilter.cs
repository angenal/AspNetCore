using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Filters;
using System;

namespace WebFramework.Filters
{
    // https://docs.microsoft.com/en-us/aspnet/core/web-api/handle-errors?view=aspnetcore-5.0
    /// <summary></summary>
    public class HttpResponseExceptionFilter : IActionFilter, IOrderedFilter
    {
        /// <summary>
        /// A filter that specifies the relative order it should run.
        /// </summary>
        public int Order { get; } = int.MaxValue - 10;

        /// <summary></summary>
        public void OnActionExecuting(ActionExecutingContext context) { }

        /// <summary></summary>
        public void OnActionExecuted(ActionExecutedContext context)
        {
            if (context.Exception is HttpResponseException exception)
            {
                context.Result = new ObjectResult(exception.Value) { StatusCode = exception.Status };
                context.ExceptionHandled = true;
            }
        }
    }

    // https://docs.microsoft.com/en-us/aspnet/core/web-api/handle-errors?view=aspnetcore-5.0#use-exceptions-to-modify-the-response
    /// <summary></summary>
    public class HttpResponseException : Exception
    {
        /// <summary>
        /// The HTTP status code generated by the origin server for this occurrence of the problem.
        /// </summary>
        public int Status { get; set; }
        /// <summary>
        /// The problem detail.
        /// </summary>
        public object Value { get; set; }
        /// <summary></summary>
        public HttpResponseException(object value, int status = 500)
        {
            Value = value;
            Status = status;
        }
    }
}
