<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebFramework</name>
    </assembly>
    <members>
        <member name="T:WebFramework.ApiController">
            <summary>
            Api ControllerBase Extensions
            </summary>
        </member>
        <member name="F:WebFramework.ApiController.user">
            <summary>
            Current user info
            </summary>
        </member>
        <member name="P:WebFramework.ApiController.db">
            <summary>
            new SqlSugarClient
            </summary>
        </member>
        <member name="M:WebFramework.ApiController.#ctor">
            <summary></summary>
        </member>
        <member name="M:WebFramework.ApiController.Error(System.String,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.ApiController.Error(System.String,System.String,System.Int32)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.ErrorJsonBadRequestResultObject">
            <summary>
            Json format for specifying errors in HTTP API responses
            </summary>
        </member>
        <member name="P:WebFramework.ErrorJsonBadRequestResultObject.Status">
            <summary>
            The HTTP status code generated by the origin server for
            this occurrence of the problem.
            </summary>
        </member>
        <member name="P:WebFramework.ErrorJsonBadRequestResultObject.Title">
            <summary>
            A short, human-readable summary of the problem.
            </summary>
        </member>
        <member name="P:WebFramework.ErrorJsonBadRequestResultObject.Errors">
            <summary>
            Errors for Status 400 Bad Request
            </summary>
        </member>
        <member name="T:WebFramework.ErrorJsonBadRequestField">
            <summary></summary>
        </member>
        <member name="P:WebFramework.ErrorJsonBadRequestField.Code">
            <summary>
            The form field name.
            </summary>
        </member>
        <member name="P:WebFramework.ErrorJsonBadRequestField.Message">
            <summary>
            A short, human-readable summary of the error.
            </summary>
        </member>
        <member name="T:WebFramework.ErrorJsonResultObject">
            <summary>
            Json format for specifying errors in HTTP API responses
            </summary>
        </member>
        <member name="P:WebFramework.ErrorJsonResultObject.Status">
            <summary>
            The HTTP status code generated by the origin server for
            this occurrence of the problem.
            </summary>
        </member>
        <member name="P:WebFramework.ErrorJsonResultObject.Title">
            <summary>
            A short, human-readable summary of the problem.
            </summary>
        </member>
        <member name="P:WebFramework.ErrorJsonResultObject.Detail">
            <summary>
            A human-readable explanation specific to this occurrence of the problem.
            </summary>
        </member>
        <member name="T:WebFramework.AppSettings">
            <summary></summary>
        </member>
        <member name="P:WebFramework.AppSettings.Configuration">
            <summary></summary>
        </member>
        <member name="P:WebFramework.AppSettings.Environment">
            <summary></summary>
        </member>
        <member name="M:WebFramework.AppSettings.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.AppSettings.FromConfigurationBuilder(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,System.Boolean)">
            <summary>
            读取配置 初始化配置
            </summary>
            <param name="environment"></param>
            <param name="initialData"></param>
            <param name="path"></param>
            <param name="optional"></param>
            <param name="reloadOnChange"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.AppSettings.ConfigureServicesAddOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            DI 配置
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:WebFramework.AppSettings.InjectOptions(Microsoft.Extensions.Options.IOptions{WebFramework.ConnectionStrings})">
            <summary>
            获取配置 DI 测试
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="P:WebFramework.AppSettings.Item(System.String)">
            <summary>
            获取配置 单个值（配置 API 交互时，冒号(分层配置值:)适用于所有平台）如:"Logging:LogLevel:Default"
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.AppSettings.GetValue``1(System.String)">
            <summary>
            获取配置 单个值 如:GetValue("Administrators:0:Name")-取数组元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.AppSettings.Get``1(System.String)">
            <summary>
            获取配置 绑定到对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.ConnectionStrings">
            <summary></summary>
        </member>
        <member name="P:WebFramework.ConnectionStrings.DefaultConnection">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Authorization.ApiAuthorizationServicesExtensions">
            <summary>
            依赖注入 services.AddApiAuthorization 服务
            </summary>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationServicesExtensions.AddApiAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            添加 Api认证授权 服务
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> for adding services.</param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationServicesExtensions.AddApiAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.Action{WebFramework.Authorization.ApiAuthorizationOptions})">
            <summary>
            添加 Api认证授权 服务
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> for adding services.</param>
            <param name="configuration"></param>
            <param name="configureOptions">A delegate to configure the <see cref="T:Microsoft.AspNetCore.ResponseCompression.ResponseCompressionOptions"/>.</param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.Authorization.ApiAuthorizationMiddlewareExtensions">
            <summary>
            添加中间件 app.UseApiAuthorization 到 Pipeline
            </summary>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddlewareExtensions.UseApiAuthorization(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            添加中间件 Api认证授权
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddlewareExtensions.UseApiAuthorization(Microsoft.AspNetCore.Builder.IApplicationBuilder,WebFramework.Authorization.ApiAuthorizationOptions)">
            <summary>
            添加中间件 Api认证授权
            </summary>
            <param name="builder"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.Authorization.ApiAuthorization">
            <summary>
            Api认证授权:/api/auth
            </summary>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorization.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorization.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            把 api认证 注册到服务容器中
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorization.ConfigAppAsync(System.Func{System.Collections.Generic.List{WebCore.Data.DTO.IAppInfo}},System.Boolean)">
            <summary>
            初始化 App.Infos
            </summary>
            <param name="action"></param>
            <param name="_async"></param>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorization.ConfigUserAsync(System.Func{System.Collections.Generic.List{WebCore.Data.DTO.IUserInfo}},System.Boolean)">
            <summary>
            初始化 User.Infos
            </summary>
            <param name="action"></param>
            <param name="_async"></param>
        </member>
        <member name="P:WebFramework.Authorization.ApiAuthorization.Configuration">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Authorization.ApiAuthorizationOptions">
            <summary>
            Api认证授权:选项
            </summary>
        </member>
        <member name="P:WebFramework.Authorization.ApiAuthorizationOptions.Name">
            <summary>
            凭证名称
            </summary>
        </member>
        <member name="P:WebFramework.Authorization.ApiAuthorizationOptions.Secret">
            <summary>
            凭证密钥Key
            </summary>
        </member>
        <member name="P:WebFramework.Authorization.ApiAuthorizationOptions.ExpiresIn">
            <summary>
            凭证有效时间，单位：秒
            </summary>
        </member>
        <member name="P:WebFramework.Authorization.ApiAuthorizationOptions.Path">
            <summary>
            需要认证的路径 - 正则表达式
            </summary>
        </member>
        <member name="T:WebFramework.Authorization.ApiAuthorizationMiddleware">
            <summary>
            Api认证授权:中间件
            </summary>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Options.IOptions{WebFramework.Authorization.ApiAuthorizationOptions})">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddleware.ReturnNoAuthorized(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            401 not authorized
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddleware.ReturnTimeOut(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            408 timeout
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddleware.CheckApp(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)">
            <summary>
            check the application - after config App.Infos
            </summary>
            <param name="context"></param>
            <param name="appid"></param>
            <param name="secret"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddleware.CheckUser(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)">
            <summary>
            check the user - after config User.Infos
            </summary>
            <param name="context"></param>
            <param name="userid"></param>
            <param name="secret"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddleware.CheckExpiredTime(System.Int64,System.Int64)">
            <summary>
            check the expired time
            </summary>
            <param name="timestamp"></param>
            <param name="expiresIn"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddleware.GetInvoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            http get invoke
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddleware.PostInvoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            http post invoke
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddleware.CheckApp(Microsoft.AspNetCore.Http.HttpContext,WebCore.Data.DTO.ReqAppInfo)">
            <summary>
            the main check method - Sinature_HMACMD5
            </summary>
            <param name="context"></param>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Authorization.ApiAuthorizationMiddleware.CheckUser(Microsoft.AspNetCore.Http.HttpContext,WebCore.Data.DTO.ReqUserInfo)">
            <summary>
            the main check method - Sinature_HMACMD5
            </summary>
            <param name="context"></param>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.ConfigurationDbContext">
            <summary>
            数据库存储AppSettings
            </summary>
        </member>
        <member name="M:WebFramework.ConfigurationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)">
            <summary></summary>
        </member>
        <member name="P:WebFramework.ConfigurationDbContext.AppSettings">
            <summary></summary>
        </member>
        <member name="T:WebFramework.AppSetting">
            <summary>
            键值对Table
            </summary>
        </member>
        <member name="P:WebFramework.AppSetting.Id">
            <summary></summary>
        </member>
        <member name="P:WebFramework.AppSetting.Value">
            <summary></summary>
        </member>
        <member name="T:WebFramework.ConfigurationDataSourceExtensions">
            <summary>
            数据库中的任何设置都将替代 appsettings.json 文件中的设置
            </summary>
        </member>
        <member name="M:WebFramework.ConfigurationDataSourceExtensions.AddConfigurationDataSource(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder})">
            <summary>
            初始化配置.AddConfigurationDataSource(options => options.UseSqlServer(Configuration.GetConnectionString("DefaultConnection")))
            </summary>
            <param name="builder"></param>
            <param name="optionsAction"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.ConfigurationDataSource">
            <summary></summary>
        </member>
        <member name="F:WebFramework.ConfigurationDataSource.optionsAction">
            <summary></summary>
        </member>
        <member name="M:WebFramework.ConfigurationDataSource.#ctor(System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder})">
            <summary></summary>
        </member>
        <member name="M:WebFramework.ConfigurationDataSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.ConfigurationDataSourceProvider">
            <summary></summary>
        </member>
        <member name="M:WebFramework.ConfigurationDataSourceProvider.#ctor(System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder})">
            <summary></summary>
        </member>
        <member name="P:WebFramework.ConfigurationDataSourceProvider.OptionsAction">
            <summary></summary>
        </member>
        <member name="M:WebFramework.ConfigurationDataSourceProvider.Load">
            <summary>
            Loads (or reloads) the data for this provider.
            </summary>
        </member>
        <member name="T:WebFramework.Controllers.ChatController">
            <summary>
            聊天消息
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.ChatController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.SignalR.IHubContext{WebFramework.SignalR.ChatHub},EasyCaching.Core.IEasyCachingProviderFactory)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Controllers.ChatController.GetUser(WebFramework.Models.DTO.MessageUserSelectInputDto)">
            <summary>
            获取某个在线用户.
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.ChatController.GetUsers(WebFramework.Models.DTO.MessageUsersSelectInputDto)">
            <summary>
            获取某些在线用户.
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.ChatController.GetRoomUsers(WebFramework.Models.DTO.MessageUsersListInputDto)">
            <summary>
            获取聊天室(群)在线用户.
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.ChatController.GetAllUsers">
            <summary>
            获取全部在线用户.
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.ChatController.GetMessages(WebFramework.Models.DTO.MessageListInputDto)">
            <summary>
            获取聊天室(群)的消息列表.
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.ChatController.SendMessage(WebFramework.Models.DTO.MessageInputDto)">
            <summary>
            发送消息给在线用户.
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.ChatController.SendMessages(WebFramework.Models.DTO.MessagesInputDto)">
            <summary>
            发送消息给聊天室(群).
            </summary>
        </member>
        <member name="T:WebFramework.Controllers.DataController">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration,WebInterface.ICrypto,Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.AppStatus">
            <summary>
            系统状态
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.DeviceId">
            <summary>
            设备ID
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.ThreadId">
            <summary>
            线程ID
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.Base64Encode(WebFramework.Models.DTO.EncodeTextInputDto)">
            <summary>
            文本Base64编码 = btoa(encodeURIComponent(text))
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.Base64Decode(WebFramework.Models.DTO.EncodeTextInputDto)">
            <summary>
            文本Base64解码 = decodeURIComponent(atob(text))
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.Encrypt(WebFramework.Models.DTO.EncryptText1InputDto)">
            <summary>
            文本加密 (authenticated encryption)
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.Decrypt(WebFramework.Models.DTO.DecryptText1InputDto)">
            <summary>
            文本解密 (authenticated encryption)
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.EncryptChaCha20(WebFramework.Models.DTO.EncryptText2InputDto)">
            <summary>
            文本加密 (ChaCha20)
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.DecryptChaCha20(WebFramework.Models.DTO.DecryptText2InputDto)">
            <summary>
            文本解密 (ChaCha20)
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.AESCBCPkcs7Encrypt(WebFramework.Models.DTO.EncryptTextInputDto)">
            <summary>
            文本加密 = CryptoJS.AES.encrypt  /data/crypto.html
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.AESCBCPkcs7Decrypt(WebFramework.Models.DTO.DecryptTextInputDto)">
            <summary>
            文本解密 = CryptoJS.AES.decrypt  /data/crypto.html
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.AES256GCMEncrypt(WebFramework.Models.DTO.EncryptText3InputDto)">
            <summary>
            文本加密 (AES 256 + GCM)
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.AES256GCMDecrypt(WebFramework.Models.DTO.DecryptText3InputDto)">
            <summary>
            文本解密 (AES 256 + GCM)
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.RSAEncrypt(WebFramework.Models.DTO.EncodeTextInputDto)">
            <summary>
            文本加密 (RSA动态加密)
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.DataController.RSADecrypt(WebFramework.Models.DTO.EncodeTextInputDto)">
            <summary>
            文本解密 (RSA动态解密)
            </summary>
        </member>
        <member name="T:WebFramework.Controllers.FileController">
            <summary>
            文件
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.FileController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration,WebInterface.ICrypto,Microsoft.Extensions.Caching.Memory.IMemoryCache,WebInterface.IImageTools,WebInterface.IPdfTools)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Controllers.FileController.Upload">
            <summary>
            上传文件
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.FileController.PdfFileSign(WebFramework.Models.DTO.PdfFileSignInputDto)">
            <summary>
            PDF数字签名 by SignLib
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.FileController.MinisignGenerateKey(WebFramework.Models.DTO.MinisignGenerateKeyInputDto)">
            <summary>
            配置密钥 for Minisign
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.FileController.MinisignFileSign(WebFramework.Models.DTO.MinisignFileSignInputDto)">
            <summary>
            文件签名 by Minisign
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.FileController.CaptchaCode(System.String)">
            <summary>
            创建验证码
            </summary>
            <param name="expireSeconds">过期时间(单位/秒):默认60秒,最多10分钟</param>
        </member>
        <member name="M:WebFramework.Controllers.FileController.CaptchaCode(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            生成验证码图片
            </summary>
            <param name="lastCode">验证码参数</param>
            <param name="width">图片宽度</param>
            <param name="height">图片高度</param>
            <param name="fontSize">字体大小</param>
            <param name="degree">难度系数 1.低 2.高</param>
        </member>
        <member name="M:WebFramework.Controllers.FileController.CaptchaComfirm(WebFramework.Models.DTO.CaptchaCodeComfirmInputDto)">
            <summary>
            确认验证码输入
            </summary>
        </member>
        <member name="T:WebFramework.Controllers.LanguageController">
            <summary>
            语言
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.LanguageController.Default">
            <summary>
            默认值
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.LanguageController.Options(System.String)">
            <summary>
            可选项
            </summary>
            <param name="fieldAsKey">"零":由值作为返回对象属性; "非零":由名称作为对象属性</param>
        </member>
        <member name="M:WebFramework.Controllers.LanguageController.Update(System.String)">
            <summary>
            修改默认值
            </summary>
        </member>
        <member name="T:WebFramework.Controllers.OfficeController">
            <summary>
            办公文档
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.OfficeController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,WebInterface.IExcelTools,WebInterface.IWordTools,WebInterface.IPptTools,WebInterface.IPdfTools)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Controllers.OfficeController.ExcelExport(WebFramework.Models.DTO.ExcelExportDataInputDto)">
            <summary>
            Excel Export with template.xlsx
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.OfficeController.PreviewS(System.String,System.String)">
            <summary>
            Generate HTML Preview
            </summary>
            <param name="filename">test.doc,xls,pptx,pdf</param>
            <param name="format">html,png,pdf</param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.Controllers.PingController">
            <summary>
            系统检查
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.PingController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Controllers.PingController.Status">
            <summary>
            当前状态
            </summary>
        </member>
        <member name="T:WebFramework.Controllers.TimeController">
            <summary>
            系统时间
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.TimeController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Caching.Memory.IMemoryCache,WebInterface.ICrypto,Microsoft.AspNetCore.SignalR.IHubContext{WebFramework.SignalR.ChatHub})">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Controllers.TimeController.Now">
            <summary>
            当前时间
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.TimeController.RecurringPushMessagesEveryMinute">
            <summary>
            检测消息推送(每分钟)
            </summary>
        </member>
        <member name="T:WebFramework.Controllers.TimeJob">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Controllers.TimeJob.db">
            <summary>
            new SqlSugarClient
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.TimeJob.#ctor">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Controllers.TimeJob.#ctor(SqlSugar.SqlSugarClient)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Controllers.TimeJob.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Controllers.TimeJob.#ctor(Microsoft.AspNetCore.SignalR.IHubContext{WebFramework.SignalR.ChatHub})">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Controllers.TimeJob.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.AspNetCore.SignalR.IHubContext{WebFramework.SignalR.ChatHub})">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Controllers.TimeJob.Execute">
            <summary>执行消息推送</summary>
        </member>
        <member name="T:WebFramework.Controllers.WxOpenController">
            <summary>
            微信小程序
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.WxOpenController.#ctor(Microsoft.Extensions.Options.IOptions{Senparc.Weixin.Entities.SenparcWeixinSetting},WebInterface.ILiteDb,WebInterface.ICrypto,WebFramework.IJwtGenerator)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Controllers.WxOpenController.Get(Senparc.Weixin.WxOpen.Entities.Request.PostModel,System.String)">
            <summary>
            [配置]微信后台验证地址“接口配置信息”的Url填写如 https://YourDomainName/WxOpen
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.WxOpenController.Post(Senparc.Weixin.WxOpen.Entities.Request.PostModel)">
            <summary>
            [配置]用户发送消息后，微信平台自动Post一个请求到这里，并等待响应XML
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.WxOpenController.GetToken(System.String)">
            <summary>
            获取登录凭证 (wx.login登陆成功后发送该请求)
            </summary>
            <param name="code">客户端获取到的参数,会被传递至微信服务器进行验证.</param>
        </member>
        <member name="M:WebFramework.Controllers.WxOpenController.CreateToken(System.String,System.String,System.String,System.String)">
            <summary>
            创建登录凭证 https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/login/auth.code2Session.html
            </summary>
            <param name="cacheKey">微信服务端返回的会话密匙保存在缓存中关联的Key</param>
            <param name="sessionKey">会话密钥(选填)【请注意该信息的安全性】</param>
            <param name="openid">用户唯一标识(选填)【请注意该信息的安全性】</param>
            <param name="unionid">用户在开放平台的唯一标识符(选填)</param>
        </member>
        <member name="M:WebFramework.Controllers.WxOpenController.GetSessionByOpenId(System.String)">
            <summary>
            自定义逻辑：处理微信OpenId与该系统的关系
            </summary>
        </member>
        <member name="M:WebFramework.Controllers.WxOpenController.GetPhoneNumber(System.String,System.String,System.String)">
            <summary>
            获取手机号
            </summary>
            <param name="sessionId">登录凭证id</param>
            <param name="encryptedData"></param>
            <param name="iv"></param>
        </member>
        <member name="M:WebFramework.Controllers.WxOpenController.CheckSign(System.String,System.String,System.String)">
            <summary>
            签名校验
            </summary>
            <param name="sessionId">登录凭证id</param>
            <param name="rawData"></param>
            <param name="signature"></param>
        </member>
        <member name="M:WebFramework.Controllers.WxOpenController.CheckData(System.String,System.String,System.String)">
            <summary>
            水印校验
            </summary>
            <param name="sessionId">登录凭证id</param>
            <param name="encryptedData"></param>
            <param name="iv"></param>
        </member>
        <member name="M:WebFramework.Controllers.WxOpenController.TestTemplate(System.String,System.String,System.String,System.String)">
            <summary>
            测试订阅消息接口
            </summary>
            <param name="sessionId">登录凭证id</param>
            <param name="templateId">消息模板id</param>
            <param name="title"></param>
            <param name="content"></param>
        </member>
        <member name="T:WebFramework.Data.LiteDb">
            <summary>
            LiteDB database service.
            </summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.#ctor(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.#ctor(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.#ctor(System.String,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.#ctor(System.String,LiteDB.BsonMapper)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.#ctor(LiteDB.ConnectionString,LiteDB.BsonMapper)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.#ctor(LiteDB.LiteDatabase)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.NewConnectionString(System.String)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.GetConnectionString(LiteDB.ConnectionString)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.Open">
            <summary>Open Current ConnectionString Database</summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.Open(System.String)">
            <summary>Open New ConnectionString Database</summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.OpenMemory">
            <summary>Open Memory Database</summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.GetConnectionString">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.LiteDb.GetConnectionString(System.String)">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Data.LiteDb.HasConnectionString">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Data.LiteDb._connectionString">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Data.LiteDb._connectionStringTpl">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Data.LiteDb.LiteDatabase">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Data.LiteDbExtensions">
            <summary>
            LiteDB extensions.
            </summary>
        </member>
        <member name="M:WebFramework.Data.LiteDbExtensions.WhereIF``1(LiteDB.ILiteQueryable{``0},System.Boolean,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Data.RavenDb">
            <summary>
            RavenDB database service.
            </summary>
        </member>
        <member name="M:WebFramework.Data.RavenDb.CreateRavenDocStore(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.String,System.String,System.String,System.String,System.String)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.RavenDb.RemoteCertificateValidationCallback(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Data.RedisManager">
            <summary>
            Redis db manager
            </summary>
        </member>
        <member name="F:WebFramework.Data.RedisManager.DefaultConfiguration">
            <summary>
            Redis server connection string  https://stackexchange.github.io/StackExchange.Redis/Configuration.html
            </summary>
        </member>
        <member name="F:WebFramework.Data.RedisManager.DataBase">
            <summary>
            Redis database
            </summary>
        </member>
        <member name="F:WebFramework.Data.RedisManager._configuration">
            <summary>
            The redis configuration string
            </summary>
        </member>
        <member name="F:WebFramework.Data.RedisManager._connectionMultiplexer">
            <summary>
            The connection multiplexer.
            </summary>
        </member>
        <member name="F:WebFramework.Data.RedisManager.redis">
            <summary>
            Get the redis connection multiplexer once
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisManager.Db">
            <summary>
            Get redis db instance
            </summary>
        </member>
        <member name="M:WebFramework.Data.RedisManager.GetDatabase(System.Int32)">
            <summary>
            Get redis db instance
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Data.RedisManager.GetConnection">
            <summary>
            Get redis client connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Data.RedisManager.Init(System.String)">
            <summary>
            Init redis cache configuration
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:WebFramework.Data.RedisManager.Init(WebFramework.Data.RedisConfiguration)">
            <summary>
            Init redis cache configuration
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:WebFramework.Data.RedisManager.Init(EasyCaching.Redis.RedisDBOptions)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.RedisManager.GetServerList">
            <summary>
            Gets the server list.
            </summary>
            <returns>The server list.</returns>
        </member>
        <member name="M:WebFramework.Data.RedisManager.GetMastersServersEndpoints">
            <summary>
            Gets the masters servers endpoints.
            </summary>
        </member>
        <member name="T:WebFramework.Data.RedisConfiguration">
            <summary>
            Redis configuration
            </summary>
        </member>
        <member name="F:WebFramework.Data.RedisConfiguration.DefaultSyncTimeout">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Data.RedisConfiguration.DefaultConnectTimeout">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Data.RedisConfiguration.DefaultConnectRetry">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Data.RedisConfiguration.DefaultConfigCheckSeconds">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Data.RedisConfiguration.DefaultWriteBuffer">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.AbortConnect">
            <summary>
            If true, Connect will not create a connection while no servers are available
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.AllowAdmin">
            <summary>
            Enables a range of commands that are considered risky
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.ChannelPrefix">
            <summary>
            Optional channel prefix for all pub/sub operations
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.ConnectRetry">
            <summary>
            The number of times to repeat connect attempts during initial Connect
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.ConnectTimeout">
            <summary>
            Timeout (ms) for connect operations
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.ConfigChannel">
            <summary>
            Broadcast channel name for communicating configuration changes
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.ConfigCheckSeconds">
            <summary>
            Time (seconds) to check configuration. This serves as a keep-alive for interactive sockets, if it is supported.
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.DefaultDatabase">
            <summary>
            Default database index, from 0 to databases - 1
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.KeepAlive">
            <summary>
            Time (seconds) at which to send a message to help keep sockets alive (60 sec default)
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.Name">
            <summary>
            Identification for the connection within redis
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.Password">
            <summary>
            Password for the redis server
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.User">
            <summary>
            User for the redis server (for use with ACLs on redis 6 and above)
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.Proxy">
            <summary>
            Type of proxy in use (if any); for example “twemproxy”
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.ResolveDns">
            <summary>
            Specifies that DNS resolution should be explicit and eager, rather than implicit
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.ResponseTimeout">
            <summary>
            Time (ms) to decide whether the socket is unhealthy
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.ServiceName">
            <summary>Not currently implemented (intended for use with sentinel)
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.Ssl">
            <summary>
            Specifies that SSL encryption should be used
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.SslHost">
            <summary>
            Enforces a particular SSL host identity on the server’s certificate
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.SslProtocols">
            <summary>
            Ssl/Tls versions supported when using an encrypted connection. Use ‘|’ to provide multiple values.
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.SyncTimeout">
            <summary>
            Time (ms) to allow for synchronous operations
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.AsyncTimeout">
            <summary>
            Time (ms) to allow for asynchronous operations
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.TieBreaker">
            <summary>
            Key to use for selecting a server in an ambiguous master scenario
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.Version">
            <summary>
            Redis version level (useful when the server does not make this available)
            </summary>
        </member>
        <member name="P:WebFramework.Data.RedisConfiguration.WriteBuffer">
            <summary>
            Size of the output buffer
            </summary>
        </member>
        <member name="M:WebFramework.Data.RedisConfiguration.#ctor">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.RedisConfiguration.#ctor(System.String)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.RedisConfiguration.ToString">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Data.RedisList">
            <summary>
            Redis List
            </summary>
        </member>
        <member name="M:WebFramework.Data.RedisList.Add``1(System.String,``0)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.RedisList.Add``1(System.String,``0[])">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.RedisList.GetLastestResult``1(System.String,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.RedisList.GetPagingResult``1(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.RedisList.Remove(System.String)">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Data.RedisList.Redis">
            <summary>
            Get redis db instance
            </summary>
        </member>
        <member name="T:WebFramework.Data.SQLServerDb">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Data.SQLServerDb.DefaultConnection">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SQLServerDb.#ctor(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SQLServerDb.#ctor(System.String)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SQLServerDb.GetConnectionString">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Data.SQLServerDb.HasConnectionString">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Data.SQLServerDb.Cnn">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SQLServerDb.Value``1(System.String,System.Object)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SQLServerDb.List``1(System.String,System.Object)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SQLServerDb.Json(System.String,System.Object)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SQLServerDb.JsonArray(System.String,System.Object)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SQLServerDb.Execute(System.String,System.Object)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Data.DbTable`1">
            <summary>
            数据表 基类 inheritors of SqlSugar Client
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:WebFramework.Data.DbTable`1.#ctor(SqlSugar.ISqlSugarClient,WebFramework.ConnectionStrings,System.String,System.Action{System.String})">
            <summary>
            数据表 基类
            </summary>
            <param name="context"></param>
            <param name="connectionString"></param>
            <param name="separatorChars"></param>
            <param name="action"></param>
        </member>
        <member name="T:WebFramework.Data.ThreadLocalSqlSugar">
            <summary>
            当前线程的数据库访问类 for SqlSugar Client
            </summary>
        </member>
        <member name="M:WebFramework.Data.ThreadLocalSqlSugar.Get(System.String,System.String,System.Action{System.String})">
            <summary>
            获取当前线程的 SqlSugar Client
            </summary>
        </member>
        <member name="M:WebFramework.Data.ThreadLocalSqlSugar.#cctor">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Data.ThreadLocalSqlSugar.threadLocal">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Data.ThreadLocalSqlSugar.cache">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Data.DbContextOfSqlSugar">
            <summary>
            数据库访问类 访问上下文 for SqlSugar Client
            </summary>
        </member>
        <member name="F:WebFramework.Data.DbContextOfSqlSugar.Client">
            <summary>
            获取数据库访问类 访问上下文
            </summary>
        </member>
        <member name="M:WebFramework.Data.DbContextOfSqlSugar.#ctor(Microsoft.Extensions.Options.IOptions{SqlSugar.ConnectionConfig})">
            <summary>
            创建数据库访问类 访问上下文
            </summary>
            <param name="options"></param>
        </member>
        <member name="T:WebFramework.Data.SqlSugarServiceCollectionExtensions">
            <summary>
            数据库访问类 注册到服务容器 for Services Container
            </summary>
        </member>
        <member name="M:WebFramework.Data.SqlSugarServiceCollectionExtensions.AddDbContextOfSqlSugar``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SqlSugar.ConnectionConfig})">
            <summary>
            注册到服务容器中
            </summary>
        </member>
        <member name="T:WebFramework.Data.SqlSugarMemoryCache">
            <summary>
            数据库内存缓存 for SqlSugar Client
            </summary>
        </member>
        <member name="F:WebFramework.Data.SqlSugarMemoryCache.cache">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Data.SqlSugarMemoryCache.keys">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SqlSugarMemoryCache.Add``1(System.String,``0)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SqlSugarMemoryCache.Add``1(System.String,``0,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SqlSugarMemoryCache.ContainsKey``1(System.String)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SqlSugarMemoryCache.Get``1(System.String)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SqlSugarMemoryCache.GetAllKey``1">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SqlSugarMemoryCache.GetOrCreate``1(System.String,System.Func{``0},System.Int32)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Data.SqlSugarMemoryCache.Remove``1(System.String)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Data.SqlSugarExtensions">
            <summary>
            数据库访问类 扩展方法
            </summary>
        </member>
        <member name="M:WebFramework.Data.SqlSugarExtensions.NewSqlSugarClient(System.String,System.String,System.Action{System.String})">
            <summary>
            new SqlSugarClient
            </summary>
            <param name="connectionString"></param>
            <param name="separatorChars"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Data.SqlSugarExtensions.Debug(SqlSugar.SqlSugarClient,System.Action{System.String})">
            <summary>
            调式代码,打印SQL
            </summary>
            <param name="db"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.Data.ValuesDbContext">
            <summary>
            Values 存储 内存数据库
            </summary>
        </member>
        <member name="M:WebFramework.Data.ValuesDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{WebFramework.Data.ValuesDbContext})">
            <summary>
            constructor
            </summary>
            <param name="options"></param>
        </member>
        <member name="P:WebFramework.Data.ValuesDbContext.StringValues">
            <summary>
            ValueModel DbSet
            </summary>
        </member>
        <member name="T:WebFramework.Data.ValuesContextOfSqlSugar">
            <summary>
            Values 存储 MSSQL
            </summary>
        </member>
        <member name="M:WebFramework.Data.ValuesContextOfSqlSugar.#ctor(Microsoft.Extensions.Options.IOptions{SqlSugar.ConnectionConfig})">
            <summary>
            constructor
            </summary>
            <param name="options"></param>
        </member>
        <member name="P:WebFramework.Data.ValuesContextOfSqlSugar.Students">
            <summary>
            ValueModel DbSet
            </summary>
        </member>
        <member name="T:WebFramework.Data.ValueModel">
            <summary>
            Value Table Model
            </summary>
        </member>
        <member name="P:WebFramework.Data.ValueModel.Id">
            <summary>
            Value ID 由数据库生成(非代码生成)
            </summary>
        </member>
        <member name="P:WebFramework.Data.ValueModel.Value">
            <summary>
            Value 最多长度50个字
            </summary>
        </member>
        <member name="T:WebFramework.DefaultCaching">
            <summary>Default Cache</summary>
        </member>
        <member name="F:WebFramework.DefaultCaching.Memory">
            <summary>Memory Cache</summary>
        </member>
        <member name="T:WebFramework.DefaultWorker">
            <summary>
            Default Worker for Background Service.
            </summary>
        </member>
        <member name="F:WebFramework.DefaultWorker.Interval">
            <summary>
            Interval Time, Default 5 Seconds
            </summary>
        </member>
        <member name="F:WebFramework.DefaultWorker.Actions">
            <summary>
            Interval Actions
            </summary>
        </member>
        <member name="M:WebFramework.DefaultWorker.#ctor(Microsoft.Extensions.Hosting.IHostApplicationLifetime,Serilog.ILogger)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.DefaultWorker.StartAsync(System.Threading.CancellationToken)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.DefaultWorker.ExecuteAsync(System.Threading.CancellationToken)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.DefaultWorker.StopAsync(System.Threading.CancellationToken)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.DefaultWorkerHostingStartup">
            <summary></summary>
        </member>
        <member name="M:WebFramework.DefaultWorkerHostingStartup.Configure(Microsoft.AspNetCore.Hosting.IWebHostBuilder)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.DownloadHttpFile">
            <summary>
            下载 HTTP 协议的文件
            </summary>
        </member>
        <member name="M:WebFramework.DownloadHttpFile.Download(System.String,System.String,System.Net.Http.HttpMethod,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.DownloadHttpFile.Download(System.String,System.String,System.Action{System.Object,Downloader.DownloadStartedEventArgs},System.Action{System.Object,System.ComponentModel.AsyncCompletedEventArgs},System.Action{System.Object,Downloader.DownloadProgressChangedEventArgs},System.Action{System.Object,Downloader.DownloadProgressChangedEventArgs},System.Collections.Specialized.NameValueCollection,System.Net.Cookie[],System.String)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.DownloadHttpFile.GetDownloadConfiguration(System.Collections.Specialized.NameValueCollection,System.Net.Cookie[],System.String)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.DownloadOtherFile">
            <summary>
            下载非 HTTP 协议的文件
            命令行 aria2c  https://github.com/aria2/aria2
            </summary>
        </member>
        <member name="T:WebFramework.EasyCachingDataSource">
            <summary>
            EasyCaching  https://easycaching.readthedocs.io
            </summary>
        </member>
        <member name="M:WebFramework.EasyCachingDataSource.MemoryProvider(EasyCaching.Core.IEasyCachingProviderFactory)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.EasyCachingDataSource.RedisProvider(EasyCaching.Core.IEasyCachingProviderFactory)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.EasyCachingDataSource.LiteDBProvider(EasyCaching.Core.IEasyCachingProviderFactory)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.EasyCachingDataSource.GetLiteDBDBOptions(System.String)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Filters.AsyncRequestValidationFilter">
            <summary>
            请求参数验证
            </summary>
        </member>
        <member name="P:WebFramework.Filters.AsyncRequestValidationFilter.Order">
            <summary>
            A filter that specifies the relative order it should run.
            </summary>
        </member>
        <member name="F:WebFramework.Filters.AsyncRequestValidationFilter.FluentValidation">
            <summary>
            启用 FluentValidation
            </summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestValidationFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestValidationFilter.BadRequestResponse(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Global Output Status 400 BadRequest with Invalid ModelState
            </summary>
        </member>
        <member name="T:WebFramework.Filters.AsyncSessionFilter">
            <summary>
            用户会话处理 by Jwt Token
            </summary>
        </member>
        <member name="F:WebFramework.Filters.AsyncSessionFilter.user">
            <summary>
            当前用户会话
            </summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncSessionFilter.#ctor(WebFramework.Session)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncSessionFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Filters.AsyncTraceMonitorFilter">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Filters.AsyncTraceMonitorFilter.Order">
            <summary>
            A filter that specifies the relative order it should run.
            </summary>
        </member>
        <member name="P:WebFramework.Filters.AsyncTraceMonitorFilter.Enabled">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Filters.AsyncTraceMonitorFilter.Trace">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncTraceMonitorFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncTraceMonitorFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncTraceMonitorFilter.OnPostRequestAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>Record post request body</summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncTraceMonitorFilter.TraceRecord(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>Trace request</summary>
        </member>
        <member name="T:WebFramework.Filters.RequestLog">
            <summary>
            Request log database model
            </summary>
        </member>
        <member name="P:WebFramework.Filters.RequestLog.Id">
            <summary>编号</summary>
        </member>
        <member name="P:WebFramework.Filters.RequestLog.Path">
            <summary>跟踪网址</summary>
        </member>
        <member name="P:WebFramework.Filters.RequestLog.Trace">
            <summary>跟踪编号</summary>
        </member>
        <member name="P:WebFramework.Filters.RequestLog.Request">
            <summary>请求内容</summary>
        </member>
        <member name="P:WebFramework.Filters.RequestLog.Response">
            <summary>响应内容</summary>
        </member>
        <member name="P:WebFramework.Filters.RequestLog.Time">
            <summary>产生时间</summary>
        </member>
        <member name="T:WebFramework.Filters.RequestLogOutputDto">
            <summary>
            Request log output
            </summary>
        </member>
        <member name="P:WebFramework.Filters.RequestLogOutputDto.Records">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Filters.RequestLogOutputDto.Page">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Filters.RequestLogOutputDto.Total">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Filters.RequestLogOutputDto.Rows">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Filters.RequestLogService">
            <summary>
            Request log database service
            </summary>
        </member>
        <member name="F:WebFramework.Filters.RequestLogService.LogDb">
            <summary>
            Use LiteDb
            </summary>
        </member>
        <member name="M:WebFramework.Filters.RequestLogService.Init(System.String)">
            <summary>
            Init LiteDb
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:WebFramework.Filters.RequestLogService.WriteLog(WebFramework.Filters.RequestLog)">
            <summary>
            Record log, if exists web logs/500 directory, and write LiteDb
            </summary>
        </member>
        <member name="F:WebFramework.Filters.RequestLogService.ConfigUrl">
            <summary>
            Config log records
            </summary>
        </member>
        <member name="M:WebFramework.Filters.RequestLogService.ConfigHandler(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Config log records from LiteDb
            </summary>
        </member>
        <member name="F:WebFramework.Filters.RequestLogService.QueryUrl">
            <summary>
            Query log records Url
            </summary>
        </member>
        <member name="M:WebFramework.Filters.RequestLogService.QueryHandler(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Query log records from LiteDb
            </summary>
        </member>
        <member name="F:WebFramework.Filters.RequestLogService.DeleteUrl">
            <summary>
            Delete log records Url
            </summary>
        </member>
        <member name="M:WebFramework.Filters.RequestLogService.DeleteHandler(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Delete log records from LiteDb
            </summary>
        </member>
        <member name="T:WebFramework.Filters.AsyncRequestHandler`1">
            <summary>
            Asynchronous subscription publication > 3k Requests/sec + The background processing time is about one minute.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:WebFramework.Filters.AsyncRequestHandler`1.Handlers">
            <summary>
            Subscribe Tasks
            </summary>
        </member>
        <member name="F:WebFramework.Filters.AsyncRequestHandler`1._data">
            <summary>
            data list
            </summary>
        </member>
        <member name="F:WebFramework.Filters.AsyncRequestHandler`1._onceConcurrentTasks">
            <summary>
            parallel tasks number
            </summary>
        </member>
        <member name="F:WebFramework.Filters.AsyncRequestHandler`1._onceInterval">
            <summary>
            sleep 1 milliseconds after parallel tasks, for load reduction
            </summary>
        </member>
        <member name="F:WebFramework.Filters.AsyncRequestHandler`1._interval">
            <summary>
            sleep 1 seconds before parallel tasks, for load reduction
            </summary>
        </member>
        <member name="F:WebFramework.Filters.AsyncRequestHandler`1._timeout">
            <summary>
            a task timeout
            </summary>
        </member>
        <member name="F:WebFramework.Filters.AsyncRequestHandler`1._thread0">
            <summary>
            a background thread
            </summary>
        </member>
        <member name="F:WebFramework.Filters.AsyncRequestHandler`1._default">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Filters.AsyncRequestHandler`1.Default">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.#ctor(System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.Publish(`0)">
            <summary>
            Publish Tasks
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.Subscribe(System.Action{`0})">
            <summary>
            Subscribe Tasks
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.Subscribe(System.Func{`0,System.Threading.Tasks.Task})">
            <summary>
            Subscribe Tasks
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.Unsubscribe">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.Start">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.Dispose">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.RunPublishTasks">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.RunSubscribeTasks">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.Run(System.Action{`0},`0)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.Run(System.Func{`0,System.Threading.Tasks.Task},`0)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.Run(System.Action{`0[]},`0[])">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.AsyncRequestHandler`1.Run(System.Func{`0[],System.Threading.Tasks.Task},`0[])">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Filters.HttpResponseExceptionFilter">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Filters.HttpResponseExceptionFilter.Order">
            <summary>
            A filter that specifies the relative order it should run.
            </summary>
        </member>
        <member name="M:WebFramework.Filters.HttpResponseExceptionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Filters.HttpResponseExceptionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Filters.HttpResponseException">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Filters.HttpResponseException.Status">
            <summary>
            The HTTP status code generated by the origin server for this occurrence of the problem.
            </summary>
        </member>
        <member name="P:WebFramework.Filters.HttpResponseException.Value">
            <summary>
            The problem detail.
            </summary>
        </member>
        <member name="M:WebFramework.Filters.HttpResponseException.#ctor(System.Object,System.Int32)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.IJwtGenerator">
            <summary>
            JWT generator interface.
            </summary>
        </member>
        <member name="M:WebFramework.IJwtGenerator.Generate(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary></summary>
        </member>
        <member name="M:WebFramework.IJwtGenerator.Generate(System.Func{System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}})">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Localizations">
            <summary>Localizations for ResourceManager</summary>
        </member>
        <member name="F:WebFramework.Localizations.Default">
            <summary>
            Default Localizations
            </summary>
        </member>
        <member name="F:WebFramework.Localizations.DefaultCulture">
            <summary>
            Default Culture String
            </summary>
        </member>
        <member name="F:WebFramework.Localizations.ResourceManager">
            <summary>
            Set Default ResourceManager use SetDefaultCulture()
            </summary>
        </member>
        <member name="F:WebFramework.Localizations.Culture">
            <summary>
            Set Default Culture use SetDefaultCulture()
            </summary>
        </member>
        <member name="M:WebFramework.Localizations.SupportedCultures">
            <summary>
            Supported Cultures
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Localizations.GetDefaultCulture">
            <summary>
            Get Default Culture
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Localizations.SetDefaultCulture(WebInterface.Language)">
            <summary>
            Set Default Culture and ResourceManager:{AssemblyName}.Resources-en-US.resources
            </summary>
            <param name="newLocalization"></param>
        </member>
        <member name="M:WebFramework.Localizations.SetDefaultCulture(System.String)">
            <summary>
            Set Default Culture and ResourceManager:{AssemblyName}.Resources-en-US.resources
            </summary>
            <param name="newLocalization"></param>
        </member>
        <member name="T:WebFramework.Models.DTO.CaptchaCodeOutputDto">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.CaptchaCodeOutputDto.LastCode">
            <summary>
            验证码生成参数
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.CaptchaCodeOutputDto.ExpireAt">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.CaptchaCodeComfirmInputDto">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.CaptchaCodeComfirmInputDto.LastCode">
            <summary>
            验证码生成参数
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.CaptchaCodeComfirmInputDto.CaptchaCode">
            <summary>
            验证码输入值
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.CaptchaCodeComfirmOutputDto">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.CaptchaCodeComfirmOutputDto.LastCode">
            <summary>
            验证码生成参数
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.CaptchaCodeComfirmOutputDto.CaptchaCode">
            <summary>
            验证码输入值
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.CaptchaCodeComfirmOutputDto.Correct">
            <summary>
            是否正确
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.CaptchaCodeComfirmOutputDto.Expired">
            <summary>
            是否已过期
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.MessageUserSelectInputDto">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MessageUserSelectInputDto.UserId">
            <summary>
            用户Id from Sid
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.MessageUsersSelectInputDto">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MessageUsersSelectInputDto.UserId">
            <summary>
            用户Id from Sid
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.MessageUsersListInputDto">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MessageUsersListInputDto.GroupName">
            <summary>
            消息群
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MessageUsersListInputDto.Size">
            <summary>
            获取数量
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.MessageListInputDto">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MessageListInputDto.GroupName">
            <summary>
            消息群
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MessageListInputDto.Size">
            <summary>
            获取数量
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.MessageInputDto">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MessageInputDto.ToUser">
            <summary>
            消息群用户
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MessageInputDto.Content">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MessageInputDto.From">
            <summary>
            消息来源
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.MessagesInputDto">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MessagesInputDto.GroupName">
            <summary>
            消息群
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MessagesInputDto.Content">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MessagesInputDto.From">
            <summary>
            消息来源
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.EncodeTextInputDto">
            <summary>
            文本编码输入
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncodeTextInputDto.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.EncodeTextOutputDto">
            <summary>
            文本编码输出
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncodeTextOutputDto.Text">
            <summary>
            编码后的文本
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.EncryptKeyPairInputDto">
            <summary>
            密钥对
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptKeyPairInputDto.Key">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptKeyPairInputDto.Iv">
            <summary>
            向量
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.EncryptTextInputDto">
            <summary>
            文本加密输入
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptTextInputDto.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptTextInputDto.Keys">
            <summary>
            密钥对
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.DecryptTextInputDto">
            <summary>
            文本解密输入
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.DecryptTextInputDto.Text">
            <summary>
            加密文本
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.DecryptTextInputDto.Keys">
            <summary>
            密钥对
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.EncryptKeyPair1InputDto">
            <summary>
            密钥对
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptKeyPair1InputDto.Key">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptKeyPair1InputDto.Nonce">
            <summary>
            随机值
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.EncryptText1InputDto">
            <summary>
            文本加密输入
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptText1InputDto.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptText1InputDto.Keys">
            <summary>
            密钥对
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.DecryptText1InputDto">
            <summary>
            文本解密输入
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.DecryptText1InputDto.Text">
            <summary>
            加密文本
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.DecryptText1InputDto.Keys">
            <summary>
            密钥对
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.EncryptKeyPair2InputDto">
            <summary>
            密钥对
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptKeyPair2InputDto.Key">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptKeyPair2InputDto.Nonce">
            <summary>
            随机值
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.EncryptText2InputDto">
            <summary>
            文本加密输入
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptText2InputDto.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptText2InputDto.Keys">
            <summary>
            密钥对
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.DecryptText2InputDto">
            <summary>
            文本解密输入
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.DecryptText2InputDto.Text">
            <summary>
            加密文本
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.DecryptText2InputDto.Keys">
            <summary>
            密钥对
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.EncryptKeyPair3InputDto">
            <summary>
            密钥对
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptKeyPair3InputDto.Key">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptKeyPair3InputDto.Nonce">
            <summary>
            随机值
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.EncryptText3InputDto">
            <summary>
            文本加密输入
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptText3InputDto.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.EncryptText3InputDto.Keys">
            <summary>
            密钥对
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.DecryptText3InputDto">
            <summary>
            文本解密输入
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.DecryptText3InputDto.Text">
            <summary>
            加密文本
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.DecryptText3InputDto.Keys">
            <summary>
            密钥对
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.EncodeTextInputDto_Validator">
            <summary>
            模型验证
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.UploadFileOutputDto">
            <summary>
            上传文件结果
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.UploadFileOutputDto.Key">
            <summary>
            the form field name.
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.UploadFileOutputDto.Value">
            <summary>
            the file name.
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.UploadFileOutputDto.ContentType">
            <summary>
            the raw Content-Type header of the uploaded file.
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.UploadFileOutputDto.Length">
            <summary>
            the file length in bytes.
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.UploadFileOutputDto.Path">
            <summary>
            Output File Path.
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.PdfFileSignInputDto">
            <summary>
            PDF数字签名 by SignLib
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.PdfFileSignInputDto.Path">
            <summary>
            未签名文件的路径(以/开头)
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.MinisignGenerateKeyInputDto">
            <summary>
            生成签名密钥 by Minisign
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MinisignGenerateKeyInputDto.Renew">
            <summary>
            重新生成
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.MinisignKeyInputDto">
            <summary>
            签名密钥 by Minisign
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MinisignKeyInputDto.KeyPass">
            <summary>
            安全密钥
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MinisignKeyInputDto.KeyFile">
            <summary>
            密钥文件名;不包括文件扩展名,默认minisign
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.MinisignKeyOutputDto">
            <summary>
            签名密钥 by Minisign
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MinisignKeyOutputDto.KeyId">
            <summary>
            安全密钥Id
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.MinisignFileSignInputDto">
            <summary>
            文件签名 by Minisign
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.MinisignFileSignInputDto.Path">
            <summary>
            未签名文件的路径(以/开头)
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.FileSignOutputDto">
            <summary>
            文件签名结果
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.FileSignOutputDto.Path">
            <summary>
            已签名文件的路径
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.IdInput">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.IdInput.Id">
            <summary>
            编号(可选)
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.IdInputDto">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.IdInputDto.Id">
            <summary>
            编号
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.IdOutputDto">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.IdOutputDto.Id">
            <summary>
            编号
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.IdxOutputDto">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.IdxOutputDto.Id">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.IdxOutputDto.X">
            <summary>
            附加信息
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.IdListInputDto">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.IdListInputDto.Id">
            <summary>
            编号列表
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.ExcelExportDataInputDto">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.ExcelExportDataInputDto.Data">
            <summary>
            数据列表
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.ExcelExportDataInputDto.Filename">
            <summary>
            导出文件名
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.ExcelExportDataInputDto.Template">
            <summary>
            是否使用模板 template.xlsx
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.ExcelExportDataItemDto">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.ExcelExportDataItemDto.NO">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.ExcelExportDataItemDto.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.ExcelExportDataItemDto.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.ExcelExportDataItemDto.Nation">
            <summary>
            民族
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.ExcelExportDataItemDto.Phone">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.ExcelExportDataItemDto.IdCard">
            <summary>
            身份证
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.ExcelExportDataItemDto.Memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.SqlSugarExtensions">
            <summary>
            数据库分页查询
            </summary>
        </member>
        <member name="M:WebFramework.Models.DTO.SqlSugarExtensions.ToPage``1(SqlSugar.ISugarQueryable{``0},WebFramework.Models.DTO.PagerInputDto)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Models.DTO.SqlSugarExtensions.ToPageAsync``1(SqlSugar.ISugarQueryable{``0},WebFramework.Models.DTO.PagerInputDto)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Models.DTO.PagerInputDto">
            <summary>
            分页输入
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.PagerInputDto.PageIndex">
            <summary>
            第几页
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.PagerInputDto.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="T:WebFramework.Models.DTO.PageOutputDto`1">
            <summary>
            分页输出
            </summary>
        </member>
        <member name="M:WebFramework.Models.DTO.PageOutputDto`1.#ctor(System.Int32,System.Int32)">
             <summary>
            
             </summary>
        </member>
        <member name="M:WebFramework.Models.DTO.PageOutputDto`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32)">
             <summary>
            
             </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.PageOutputDto`1.Data">
            <summary>
            分页数据
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.PageOutputDto`1.PageIndex">
            <summary>
            第几页
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.PageOutputDto`1.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:WebFramework.Models.DTO.PageOutputDto`1.PageNumber">
            <summary>
            分页数量
            </summary>
        </member>
        <member name="T:WebFramework.Models.Entities.User">
            <summary>
            User Account to Represents a user in the identity system.
            The Id property is initialized to form a new GUID string value.
            </summary>
        </member>
        <member name="M:WebFramework.Models.Entities.User.#ctor">
            <summary>
            Initializes a new instance of IdentityUser.
            </summary>
        </member>
        <member name="M:WebFramework.Models.Entities.User.#ctor(System.String)">
            <summary>
            Initializes a new instance of IdentityUser.
            </summary>
            <param name="userName">The user login name.</param>
        </member>
        <member name="M:WebFramework.Models.Entities.User.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of IdentityUser.
            </summary>
            <param name="init">Want to initialize?</param>
        </member>
        <member name="P:WebFramework.Models.Entities.User.PasswordSalt">
            <summary>
            the password salt for this user.
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.PasswordResetCode">
            <summary>
            the password reset code.
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.EmailConfirmedTime">
            <summary>
            邮箱激活时间
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.PhoneNumberConfirmedTime">
            <summary>
            手机激活时间
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.LastLoginIP">
            <summary>
            最近登录IP
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.LastLoginTime">
            <summary>
            最近登录时间
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.AuthenticationKey">
            <summary>
            最新认证密钥
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.IsActive">
            <summary>
            账号是否激活(用户启用状态)
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.IdCard">
            <summary>
            身份证号码(身份唯一标识)
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.WeChatOpenId">
            <summary>
            微信openid(身份唯一标识)
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.FaceImgCode">
            <summary>
            人脸识别id(身份唯一标识)
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.Type">
            <summary>
            用户类型
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.Role">
            <summary>
            用户角色
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.Menu">
            <summary>
            用户菜单
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.Avatar">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.Nickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.Birthday">
            <summary>
            生日
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.Nation">
            <summary>
            民族
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.NativePlace">
            <summary>
            籍贯
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.LivePlace">
            <summary>
            现居住地
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.DomicileAddress">
            <summary>
            户籍所在地
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.FamilyAddress">
            <summary>
            家庭住址
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.AreaPath">
            <summary>
            行政区划
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.Education">
            <summary>
            学历
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.Degree">
            <summary>
            学位
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.TechnicalLevel">
            <summary>
            专业技术级别
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.TechnicalLevelDate">
            <summary>
            取得专业技术职务日期
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.WorkUnit">
            <summary>
            工作单位
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.WorkPost">
            <summary>
            工作岗位
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.JobTitle">
            <summary>
            工作职务
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:WebFramework.Models.Entities.User.LastModificationTime">
            <summary>
            最近修改时间
            </summary>
        </member>
        <member name="T:WebFramework.PostFormFile`1">
            <summary>
            上传文件
            </summary>
        </member>
        <member name="M:WebFramework.PostFormFile`1.GetUploadedTextFile(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Http.IFormFile,System.Int32,System.Boolean)">
            <summary>
            获取文本文件(UTF8 Encoding)用于将文件内容保存到数据库
            </summary>
            <param name="modelState"></param>
            <param name="file"></param>
            <param name="maximumLength"></param>
            <param name="autoConvertToUtf8"></param>
            <returns>文件内容</returns>
        </member>
        <member name="M:WebFramework.PostFormFile`1.SaveUploadedTextFile(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Http.IFormFile,System.String,System.Int32)">
            <summary>
            获取文本文件(UTF8 Encoding)用于将文件保存到磁盘
            </summary>
            <param name="modelState"></param>
            <param name="file"></param>
            <param name="filePath">指定的位置具有写入权限</param>
            <param name="maximumLength"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.PostFormFile`1.SaveUploadedImageFile(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Http.IFormFile,System.String,WebCore.Size[])">
            <summary>
            获取上传图片并保存
            </summary>
            <param name="modelState"></param>
            <param name="file"></param>
            <param name="filePath">指定的位置具有写入权限</param>
            <param name="sizes"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.PostFormFile`1.CheckUploadedFile(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Http.IFormFile,WebCore.FileSomeType,WebCore.Size[],System.String[],System.String)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Services.ServicesModule">
            <summary>
            Services: Crypto,Database,Compression,Caching,CORS,Authentication,Authorization,Swagger,i18n...
            </summary>
        </member>
        <member name="T:WebFramework.Services.ServicesModule.Options">
            <summary>
            Provides programmatic configuration for the MVC framework.
            </summary>
        </member>
        <member name="M:WebFramework.Services.ServicesModule.Options.MvcOptions(Microsoft.AspNetCore.Mvc.MvcOptions)">
            <summary>
            注册全局过滤器 https://docs.microsoft.com/zh-cn/aspnet/core/mvc/controllers/filters
            </summary>
        </member>
        <member name="M:WebFramework.Services.ServicesModule.AddApiControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds services for api controllers
            </summary>
        </member>
        <member name="M:WebFramework.Services.ServicesModule.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Register all services
            </summary>
        </member>
        <member name="M:WebFramework.Services.ServicesModule.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Configure all services
            </summary>
        </member>
        <member name="T:WebFramework.Services.ApiServerModule">
            <summary>
            Api Server(Kestrel,IIS) Module
            </summary>
        </member>
        <member name="M:WebFramework.Services.ApiServerModule.AddApiServer(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Register all services
            </summary>
        </member>
        <member name="M:WebFramework.Services.ApiServerModule.UseApiServer(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Configure services
            </summary>
        </member>
        <member name="T:WebFramework.Services.AuthModule">
            <summary>
            Api Authentication + Authorization Module
            </summary>
        </member>
        <member name="M:WebFramework.Services.AuthModule.AddAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Register Authentication + Authorization services
            </summary>
        </member>
        <member name="T:WebFramework.Services.AutofacStartup">
            <summary>
            AutofacStartup extends Startup class
            </summary>
        </member>
        <member name="M:WebFramework.Services.AutofacStartup.ConfigureContainer(Autofac.ContainerBuilder)">
            <summary>
            Configure default container in Startup class
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:WebFramework.Services.AutofacStartup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor in Startup class
            </summary>
        </member>
        <member name="T:WebFramework.Services.AutofacProviderConfigure">
            <summary>
            Autofac for default container service provider
            </summary>
        </member>
        <member name="M:WebFramework.Services.AutofacProviderConfigure.ConfigureAutofac(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            Configure default container service provider in Program:Main:CreateHostBuilder
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.Services.AutofacServicesModule">
            <summary>
            Autofac services module
            </summary>
        </member>
        <member name="F:WebFramework.Services.AutofacServicesModule.Types">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.AutofacServicesModule.Load(Autofac.ContainerBuilder)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Services.CacheModule">
            <summary>
            Cache Module
            </summary>
        </member>
        <member name="M:WebFramework.Services.CacheModule.AddCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register services
            </summary>
        </member>
        <member name="M:WebFramework.Services.CacheModule.UseCache(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use Cache Middleware
            </summary>
        </member>
        <member name="T:WebFramework.Services.CompressionModule">
            <summary>
            Compression Module
            </summary>
        </member>
        <member name="M:WebFramework.Services.CompressionModule.AddCompression(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register services
            </summary>
        </member>
        <member name="M:WebFramework.Services.CompressionModule.UseCompression(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use Compression Middleware
            </summary>
        </member>
        <member name="T:WebFramework.Services.CryptoModule">
            <summary>
            Crypto Module
            </summary>
        </member>
        <member name="M:WebFramework.Services.CryptoModule.AddCrypto(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register services
            </summary>
        </member>
        <member name="T:WebFramework.Services.DatabaseModule">
            <summary>
            Database Module
            </summary>
        </member>
        <member name="M:WebFramework.Services.DatabaseModule.AddDatabase(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register services
            </summary>
        </member>
        <member name="T:WebFramework.Services.EmailModule">
            <summary>
            Email Module
            </summary>
        </member>
        <member name="M:WebFramework.Services.EmailModule.AddEmail(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register services
            </summary>
        </member>
        <member name="T:WebFramework.Services.ExceptionHandlerModule">
            <summary>
            Configure Global monitoring and exception handler module
            </summary>
        </member>
        <member name="M:WebFramework.Services.ExceptionHandlerModule.AddExceptionHandler(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Init Exception Handler services
            </summary>
        </member>
        <member name="M:WebFramework.Services.ExceptionHandlerModule.ExceptionHandler(Microsoft.AspNetCore.Builder.ExceptionHandlerOptions)">
            <summary>
            Global Exception Handler for Status 404 ~ 500 Internal Server Error
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:WebFramework.Services.ExceptionHandlerModule.UseSentryMonitor(Microsoft.AspNetCore.Hosting.IWebHostBuilder)">
            <summary>
            Global Monitor System
            Sentry: Exception Monitoring Platform
            https://sentry.io/signup
            https://github.com/docker-library/docs/tree/master/sentry
            https://github.com/getsentry/onpremise > ./install.sh (docker)
            </summary>
        </member>
        <member name="T:WebFramework.Services.ExceptionLog">
            <summary>
            Exception log database model
            </summary>
        </member>
        <member name="P:WebFramework.Services.ExceptionLog.Id">
            <summary>编号</summary>
        </member>
        <member name="P:WebFramework.Services.ExceptionLog.Path">
            <summary>跟踪网址</summary>
        </member>
        <member name="P:WebFramework.Services.ExceptionLog.Trace">
            <summary>跟踪编号</summary>
        </member>
        <member name="P:WebFramework.Services.ExceptionLog.Message">
            <summary>异常消息</summary>
        </member>
        <member name="P:WebFramework.Services.ExceptionLog.Content">
            <summary>异常详情</summary>
        </member>
        <member name="P:WebFramework.Services.ExceptionLog.Time">
            <summary>产生时间</summary>
        </member>
        <member name="T:WebFramework.Services.ExceptionLogOutputDto">
            <summary>
            Exception log output
            </summary>
        </member>
        <member name="P:WebFramework.Services.ExceptionLogOutputDto.Records">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.ExceptionLogOutputDto.Page">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.ExceptionLogOutputDto.Total">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.ExceptionLogOutputDto.Rows">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Services.ExceptionLogService">
            <summary>
            Exception log database service
            </summary>
        </member>
        <member name="F:WebFramework.Services.ExceptionLogService.LogDb">
            <summary>
            Use LiteDb
            </summary>
        </member>
        <member name="M:WebFramework.Services.ExceptionLogService.Init(System.String)">
            <summary>
            Init LiteDb
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:WebFramework.Services.ExceptionLogService.WriteLog(WebFramework.Services.ExceptionLog)">
            <summary>
            Record log, if exists web logs/500 directory, and write LiteDb
            </summary>
        </member>
        <member name="F:WebFramework.Services.ExceptionLogService.QueryUrl">
            <summary>
            Query log records Url
            </summary>
        </member>
        <member name="M:WebFramework.Services.ExceptionLogService.QueryHandler(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Query log records from LiteDb
            </summary>
        </member>
        <member name="F:WebFramework.Services.ExceptionLogService.DeleteUrl">
            <summary>
            Delete log records Url
            </summary>
        </member>
        <member name="M:WebFramework.Services.ExceptionLogService.DeleteHandler(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Delete log records from LiteDb
            </summary>
        </member>
        <member name="T:WebFramework.Services.AsyncExceptionHandler`1">
            <summary>
            Asynchronous subscription publication > 3k Requests/sec + The background processing time is about one minute.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:WebFramework.Services.AsyncExceptionHandler`1.Handlers">
            <summary>
            Subscribe Tasks
            </summary>
        </member>
        <member name="F:WebFramework.Services.AsyncExceptionHandler`1._data">
            <summary>
            data list
            </summary>
        </member>
        <member name="F:WebFramework.Services.AsyncExceptionHandler`1._onceConcurrentTasks">
            <summary>
            parallel tasks number
            </summary>
        </member>
        <member name="F:WebFramework.Services.AsyncExceptionHandler`1._onceInterval">
            <summary>
            sleep 1 milliseconds after parallel tasks, for load reduction
            </summary>
        </member>
        <member name="F:WebFramework.Services.AsyncExceptionHandler`1._interval">
            <summary>
            sleep 1 seconds before parallel tasks, for load reduction
            </summary>
        </member>
        <member name="F:WebFramework.Services.AsyncExceptionHandler`1._timeout">
            <summary>
            a task timeout
            </summary>
        </member>
        <member name="F:WebFramework.Services.AsyncExceptionHandler`1._thread0">
            <summary>
            a background thread
            </summary>
        </member>
        <member name="F:WebFramework.Services.AsyncExceptionHandler`1._default">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.AsyncExceptionHandler`1.Default">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.#ctor(System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.Publish(`0)">
            <summary>
            Publish Tasks
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.Subscribe(System.Action{`0})">
            <summary>
            Subscribe Tasks
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.Subscribe(System.Func{`0,System.Threading.Tasks.Task})">
            <summary>
            Subscribe Tasks
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.Unsubscribe">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.Start">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.Dispose">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.RunPublishTasks">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.RunSubscribeTasks">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.Run(System.Action{`0},`0)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.Run(System.Func{`0,System.Threading.Tasks.Task},`0)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.Run(System.Action{`0[]},`0[])">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.AsyncExceptionHandler`1.Run(System.Func{`0[],System.Threading.Tasks.Task},`0[])">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Services.HangfireModule">
            <summary>
            Hangfire: Background jobs and workers.
            </summary>
        </member>
        <member name="M:WebFramework.Services.HangfireModule.AddHangfire(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register services
            </summary>
        </member>
        <member name="M:WebFramework.Services.HangfireModule.UseHangfire(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Configure services
            </summary>
        </member>
        <member name="T:WebFramework.Services.HangfireResolvers">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.HangfireResolvers.Authorize(Hangfire.Dashboard.DashboardContext)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.HangfireResolvers.IsReadOnlyFunc(Hangfire.Dashboard.DashboardContext)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.HangfireResolvers.GetTimeZoneById(System.String)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Services.HangfireBasicAuthenticationTokens">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.HangfireBasicAuthenticationTokens.User">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.HangfireBasicAuthenticationTokens.Pass">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.HangfireBasicAuthenticationTokens.#ctor(System.String[])">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.HangfireBasicAuthenticationTokens.IsInvalid">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.HangfireBasicAuthenticationTokens.IsMatch(System.String,System.String)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Services.HangfireBasicAuthenticationFilter">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Services.HangfireBasicAuthenticationFilter.Scheme">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.HangfireBasicAuthenticationFilter.DashboardTitle">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.HangfireBasicAuthenticationFilter.User">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.HangfireBasicAuthenticationFilter.Pass">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.HangfireBasicAuthenticationFilter.Authorize(Hangfire.Dashboard.DashboardContext)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.HangfireBasicAuthenticationFilter.SetChallengeResponse(Microsoft.AspNetCore.Http.HttpContext)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.HangfireBasicAuthenticationFilter.ExtractTokens(System.Net.Http.Headers.AuthenticationHeaderValue)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.HangfireBasicAuthenticationFilter.Not_Basic_Authentication(System.Net.Http.Headers.AuthenticationHeaderValue)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Services.IdentityModule">
            <summary>
            Identity Module: Identity system for the specified User and Role types.
            </summary>
        </member>
        <member name="M:WebFramework.Services.IdentityModule.AddIdentityLiteDB(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register services
            </summary>
        </member>
        <member name="T:WebFramework.Services.JwtAuthenticationService">
            <summary>
            JWT authentication service.
            </summary>
        </member>
        <member name="M:WebFramework.Services.JwtAuthenticationService.AddJwtAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register JWT token authentication service.
            </summary>
        </member>
        <member name="T:WebFramework.Services.JwtGenerator">
            <summary>
            JWT generator and appsettings.
            </summary>
        </member>
        <member name="F:WebFramework.Services.JwtGenerator.Settings">
            <summary>
            JWT settings.
            </summary>
        </member>
        <member name="M:WebFramework.Services.JwtGenerator.Generate(System.Func{System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}})">
            <summary>
            JWT token generator.
            </summary>
            <param name="generator"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Services.JwtGenerator.Generate(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Services.LimitingModule">
            <summary>
            Limiting services module
            IpRateLimiting: https://github.com/stefanprodan/AspNetCoreRateLimit/wiki/IpRateLimitMiddleware
            </summary>
        </member>
        <member name="M:WebFramework.Services.LimitingModule.AddLimiting(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register services
            </summary>
        </member>
        <member name="M:WebFramework.Services.LimitingModule.UseLimiting(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure services
            </summary>
        </member>
        <member name="T:WebFramework.Services.Logs">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Services.Logs.Enabled">
            <summary>
            Use Default Logging for Development Environment
            </summary>
        </member>
        <member name="F:WebFramework.Services.Logs.EnabledSerilog">
            <summary>
            Use Serilog Logging for Production Environment, Output Directory: /logs
            </summary>
        </member>
        <member name="F:WebFramework.Services.Logs.EnabledSerilogConfiguration">
            <summary>
            Use Serilog Logging Configuration with appsettings.json
            </summary>
        </member>
        <member name="F:WebFramework.Services.Logs.AppSettings">
            <summary>
            Configuration Section in appsettings.json
            </summary>
        </member>
        <member name="F:WebFramework.Services.Logs.AppSettingsLogManage">
            <summary>
            Configuration Exception Log Manage in appsettings.json
            </summary>
        </member>
        <member name="F:WebFramework.Services.Logs.AppSettingSerilog">
            <summary>
            Configuration Serilog in appsettings.json
            </summary>
        </member>
        <member name="F:WebFramework.Services.Logs.RootPath">
            <summary>
            Log files root directory
            </summary>
        </member>
        <member name="F:WebFramework.Services.Logs.Manage">
            <summary>
            Log Manage Configuration
            </summary>
        </member>
        <member name="F:WebFramework.Services.Logs.RequestHandler">
            <summary>
            Asynchronous record log file
            </summary>
        </member>
        <member name="F:WebFramework.Services.Logs.ExceptionHandler">
            <summary>
            Asynchronous record log file
            </summary>
        </member>
        <member name="M:WebFramework.Services.Logs.Init">
            <summary>
            Log Init
            </summary>
        </member>
        <member name="T:WebFramework.Services.LoggingModule">
            <summary>
            Logging Module
            </summary>
        </member>
        <member name="M:WebFramework.Services.LoggingModule.CreateBootstrapLogger">
            <summary>
            Create default logger, it can be replace with UseSerilog() in IHostBuilder
            </summary>
        </member>
        <member name="M:WebFramework.Services.LoggingModule.NewLoggerConfiguration(System.String)">
            <summary>
            Use new LoggerConfiguration for CreateLogger
            https://github.com/serilog/serilog-settings-configuration/blob/dev/sample/Sample
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Services.LoggingModule.ConfigureLogging(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            Configure Logging Module
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Services.LoggingModule.UseSerilogLogging(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Configure Serilog Logging Module
            </summary>
        </member>
        <member name="T:WebFramework.Services.LogManage">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.LogManage.Trace">
            <summary>track all api requests</summary>
        </member>
        <member name="P:WebFramework.Services.LogManage.Limit">
            <summary>limit request byte size</summary>
        </member>
        <member name="P:WebFramework.Services.LogManage.Path">
            <summary>the directory in web root path</summary>
        </member>
        <member name="P:WebFramework.Services.LogManage.User">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.LogManage.Pass">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Services.RegisterResourcesModule">
            <summary>
            Register i18n supports multi language
            </summary>
        </member>
        <member name="F:WebFramework.Services.RegisterResourcesModule.ResourcesPath">
            <summary>
            Application Resources Path
            /Resources/Controllers/{controller}.en-US.resx {controller}.en-US.Designer.cs
            /Resources/Controllers/{controller}.zh-CN.resx ...
            </summary>
        </member>
        <member name="M:WebFramework.Services.RegisterResourcesModule.AddResources(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.RegisterResourcesModule.UseResources(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Services.LanguageRouteConstraint">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Services.LanguageRouteConstraint.AppSettings">
            <summary>
            Configuration "Culture" in appsettings.json
            </summary>
        </member>
        <member name="F:WebFramework.Services.LanguageRouteConstraint.Key">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Services.LanguageRouteConstraint.SupportedCultures">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Services.LanguageRouteConstraint.Cultures">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Services.LanguageRouteConstraint.Languages">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.LanguageRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Services.RouteDataRequestCultureProvider">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.RouteDataRequestCultureProvider.IndexOfCulture">
            <summary></summary>
        </member>
        <member name="P:WebFramework.Services.RouteDataRequestCultureProvider.IndexofUICulture">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Services.RouteDataRequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Services.SessionModule">
            <summary>
            Session Module
            </summary>
        </member>
        <member name="M:WebFramework.Services.SessionModule.AddSession(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register services
            </summary>
        </member>
        <member name="T:WebFramework.Services.SwaggerDocService">
            <summary>
            Swagger Doc service.
            https://docs.microsoft.com/zh-cn/aspnet/core/tutorials/getting-started-with-swashbuckle
            </summary>
        </member>
        <member name="F:WebFramework.Services.SwaggerDocService.apiKeyQueryOrCookieParameterName">
            <summary>
            HttpRequest Query Variable for JwtAuthenticationService
            </summary>
        </member>
        <member name="M:WebFramework.Services.SwaggerDocService.AddSwaggerGen(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register Swagger Doc service.
            http://localhost:5000/swagger/index.html
            http://localhost:5000/swagger/v1/swagger.json
            </summary>
        </member>
        <member name="M:WebFramework.Services.SwaggerDocService.UseSwaggerGen(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Use Swagger Doc Generator.
            </summary>
            <param name="app"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.Services.SwaggerGenConfigureOptions">
            <summary>
            Configures the Swagger generation options.
            </summary>
            <remarks>This allows API versioning to define a Swagger document per API version after the
            <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider"/> service has been resolved from the service container.</remarks>
        </member>
        <member name="M:WebFramework.Services.SwaggerGenConfigureOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:WebFramework.Services.SwaggerGenConfigureOptions"/> class.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger documents.</param>
        </member>
        <member name="M:WebFramework.Services.SwaggerGenConfigureOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <inheritdoc />
        </member>
        <member name="T:WebFramework.Services.SwaggerDefaultValues">
            <summary>
            Represents the Swagger/Swashbuckle operation filter used to document the implicit API version parameter.
            </summary>
            <remarks>This <see cref="T:Swashbuckle.AspNetCore.SwaggerGen.IOperationFilter"/> is only required due to bugs in the <see cref="T:Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator"/>.
            Once they are fixed and published, this class can be removed.</remarks>
        </member>
        <member name="M:WebFramework.Services.SwaggerDefaultValues.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Applies the filter to the specified operation using the given context.
            </summary>
            <param name="operation">The operation to apply the filter to.</param>
            <param name="context">The current operation filter context.</param>
        </member>
        <member name="T:WebFramework.Services.UploadModule">
            <summary>
            Upload Module
            </summary>
        </member>
        <member name="M:WebFramework.Services.UploadModule.AddUpload(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Register services
            </summary>
        </member>
        <member name="M:WebFramework.Services.UploadModule.UseUpload(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use Upload Middleware
            </summary>
        </member>
        <member name="M:WebFramework.Services.UploadModule.AddMinio(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            对象存储 Minio
            </summary>
        </member>
        <member name="M:WebFramework.Services.UploadModule.AddTus(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            断点续传 Tus
            </summary>
        </member>
        <member name="T:WebFramework.Services.TusFileServer">
            <summary>
            Tus File Server
            </summary>
        </member>
        <member name="F:WebFramework.Services.TusFileServer.UrlPath">
            <summary>
            下载目录
            </summary>
        </member>
        <member name="F:WebFramework.Services.TusFileServer.WebRootPath">
            <summary>
            上传目录
            </summary>
        </member>
        <member name="F:WebFramework.Services.TusFileServer.Expiration">
            <summary>
            续传过期
            </summary>
        </member>
        <member name="M:WebFramework.Services.TusFileServer.DownloadHandler(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            下载文件 Tus Endpoint Handler
            </summary>
        </member>
        <member name="T:WebFramework.Services.ValidationModule">
            <summary>
            Configure Global Input Validation module
            </summary>
        </member>
        <member name="M:WebFramework.Services.ValidationModule.AddValidation(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Init Exception Handler services
            </summary>
        </member>
        <member name="M:WebFramework.Services.ValidationModule.BadRequestHandler(Microsoft.AspNetCore.Mvc.ApiBehaviorOptions)">
            <summary>
            Global Error Handler for Status 400 BadRequest with Invalid ModelState
            </summary>
        </member>
        <member name="T:WebFramework.Services.ApiVersionService">
            <summary>
            ApiVersionService Provides the implementation for ASP.NET Core.
            https://github.com/microsoft/aspnet-api-versioning/tree/master/samples/aspnetcore/SwaggerSample
            </summary>
        </member>
        <member name="F:WebFramework.Services.ApiVersionService.AppSettings">
            <summary>
            Configuration in appsettings.json for UseVersionedApiExplorer,
            the Controller Attributes as follows,
            "Version": "yes" => [ApiVersion("1.0")] [Route("api/[controller]/v{version:apiVersion}/[action]")]
            "Version": "no" => [ApiExplorerSettings(GroupName = "demo"), Display(Name = "演示系统", Description = "演示系统描述文字")] [Route("api/[controller]/v1/[action]")]
            </summary>
        </member>
        <member name="F:WebFramework.Services.ApiVersionService.HeaderApiVersion">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Services.ApiVersionService.DefaultQueryParameterName">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Services.ApiVersionService.SelectDefinitionPrefix">
            <summary>select a definition in SwaggerUI</summary>
        </member>
        <member name="F:WebFramework.Services.ApiVersionService.UseVersionedApiExplorer">
            <summary>false, if "Version" in appsettings.json is not yes</summary>
        </member>
        <member name="F:WebFramework.Services.ApiVersionService.DefaultVersion">
            <summary>please do not modify the variable</summary>
        </member>
        <member name="F:WebFramework.Services.ApiVersionService.DefaultApiVersion">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Services.ApiVersionService.ControllerBaseClasses">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Services.ApiVersionService.controller">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Services.ApiVersionService.controllerRoute">
            <summary></summary>
        </member>
        <member name="F:WebFramework.Services.ApiVersionService.Controllers">
            <summary>
            Api Controllers and Attributes.
            </summary>
        </member>
        <member name="F:WebFramework.Services.ApiVersionService.Versions">
            <summary>
            Api Versions for all functional module.
            </summary>
        </member>
        <member name="M:WebFramework.Services.ApiVersionService.Init(Microsoft.Extensions.Configuration.IConfiguration,System.String[])">
            <summary>
            Init Api Controllers for all functional module.
            </summary>
            <param name="config"></param>
            <param name="controllerBaseClasses"></param>
        </member>
        <member name="M:WebFramework.Services.ApiVersionService.AddApiVersionService(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Adds api versions services to the specified Microsoft.Extensions.DependencyInjection.IServiceCollection.
            </summary>
            <param name="services"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.Services.SwaggerApiVersion">
            <summary>
            Swagger Doc ApiVersion and ApiExplorerSettings.
            [ApiExplorerSettings(GroupName = "demo"), Display(Name = "演示系统", Description = "演示系统描述文字")]
            </summary>
        </member>
        <member name="P:WebFramework.Services.SwaggerApiVersion.Module">
            <summary>
            ApiExplorerSettings.GroupName => /swagger/{version}/swagger.json
            for functional module endpoint
            </summary>
        </member>
        <member name="P:WebFramework.Services.SwaggerApiVersion.Name">
            <summary>
            Display.Name => Swagger Endpoint Name
            </summary>
        </member>
        <member name="P:WebFramework.Services.SwaggerApiVersion.Description">
            <summary>
            Display.Description => Swagger Endpoint Description
            </summary>
        </member>
        <member name="P:WebFramework.Services.SwaggerApiVersion.Versions">
            <summary>
            ApiVersion.Versions => Swagger Endpoint Versions
            </summary>
        </member>
        <member name="P:WebFramework.Services.SwaggerApiVersion.Controllers">
            <summary>
            All Api Controllers in functional module
            </summary>
        </member>
        <member name="T:WebFramework.Services.SwaggerApiController">
            <summary>
            Swagger Doc Api Controller and Attributes.
            </summary>
        </member>
        <member name="P:WebFramework.Services.SwaggerApiController.Type">
            <summary>
            Api Controller Type extends ControllerBase with a [ApiController] Attribute
            </summary>
        </member>
        <member name="P:WebFramework.Services.SwaggerApiController.Route">
            <summary>
            Api Route Attribute for Controller
            </summary>
        </member>
        <member name="P:WebFramework.Services.SwaggerApiController.ApiVersion">
            <summary>
            Api Version Attribute for Controller
            </summary>
        </member>
        <member name="P:WebFramework.Services.SwaggerApiController.ApiVersions">
            <summary>
            Api Version Attributes for Actions in Controller Methods
            </summary>
        </member>
        <member name="P:WebFramework.Services.SwaggerApiController.ApiExplorerSettings">
            <summary>
            Api Explorer Settings Attribute for Controller
            </summary>
        </member>
        <member name="P:WebFramework.Services.SwaggerApiController.Display">
            <summary>
            Api Controller Display Attribute for Controller
            </summary>
        </member>
        <member name="M:WebFramework.Services.SwaggerApiController.Versions(System.String,System.Boolean)">
            <summary>
            Get Api Versions
            </summary>
            <param name="actionInControllerMethod"></param>
            <param name="addControllerVersions"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.Session">
            <summary>
            用户会话 by Jwt Token
            </summary>
        </member>
        <member name="M:WebFramework.Session.#ctor">
            <summary>
            用户会话
            </summary>
        </member>
        <member name="M:WebFramework.Session.#ctor(System.String)">
            <summary>
            用户会话
            </summary>
            <param name="userName"></param>
        </member>
        <member name="M:WebFramework.Session.#ctor(System.String,System.String)">
            <summary>
            用户会话
            </summary>
            <param name="id">主键ID</param>
            <param name="userName">唯一账号</param>
        </member>
        <member name="P:WebFramework.Session.Type">
            <summary>
            类别
            </summary>
        </member>
        <member name="P:WebFramework.Session.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:WebFramework.Session.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:WebFramework.Session.Nickname">
            <summary>
            别名
            </summary>
        </member>
        <member name="P:WebFramework.Session.IdCard">
            <summary>
            身份证号码
            </summary>
        </member>
        <member name="P:WebFramework.Session.Avatar">
            <summary>
            头像
            </summary>
        </member>
        <member name="T:WebFramework.SessionExtensions">
            <summary>
            用户会话帮助 by Jwt Token
            </summary>
        </member>
        <member name="M:WebFramework.SessionExtensions.Session(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            转换登录身份信息为当前会话信息
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SessionExtensions.Claims(WebFramework.Session)">
            <summary>
            转换当前会话信息为登录身份信息
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.SignalR.ChatHub">
            <summary>
            聊天系统
            </summary>
        </member>
        <member name="F:WebFramework.SignalR.ChatHub.Connections">
            <summary>
            在线用户列表.
            </summary>
        </member>
        <member name="F:WebFramework.SignalR.ChatHub.ConnectionsMap">
            <summary>
            在线用户连接ID.
            </summary>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.GetUsers">
            <summary>
            获取全部在线用户.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.GetUsers(System.String)">
            <summary>
            获取某个在线用户.
            </summary>
            <param name="userId">用户Id from JwtRegisteredClaimNames.Sid</param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.GetUsers(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取某些在线用户.
            </summary>
            <param name="userIdList">用户Id from JwtRegisteredClaimNames.Sid</param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.GetUsers(System.Collections.Generic.IEnumerable{WebFramework.SignalR.RoomUser})">
            <summary>
            获取聊天室(群)在线用户.
            </summary>
            <param name="userIdList">消息群用户</param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.GetRoomUsers(System.String)">
            <summary>
            获取聊天室(群)在线用户.
            </summary>
            <param name="room">聊天室(群) from Query["room"]</param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.GetConnectionsId(System.String)">
            <summary>
            获取在线用户连接ID.
            </summary>
            <param name="userId">用户Id from JwtRegisteredClaimNames.Sid</param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.GetConnectionsId(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取在线用户连接ID.
            </summary>
            <param name="userIdList">用户Id from JwtRegisteredClaimNames.Sid</param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.GetConnectionsId(System.Collections.Generic.IEnumerable{WebFramework.SignalR.RoomUser})">
            <summary>
            获取在线用户连接ID.
            </summary>
            <param name="userIdList">用户Id from JwtRegisteredClaimNames.Sid</param>
            <returns></returns>
        </member>
        <member name="P:WebFramework.SignalR.ChatHub.db">
            <summary>
            数据库访问类 SqlSugar Client
            </summary>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.#ctor">
            <summary></summary>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.Join(System.String,System.String,System.String)">
            <summary>
            加入聊天室
            </summary>
            <param name="room">聊天室(群)</param>
            <param name="method">加入+事件方法</param>
            <param name="leaveOwnRoom">离开当前聊天室-事件方法</param>
            <returns>throw Clients "onError"</returns>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.Send(System.String,System.String,System.String,System.String)">
            <summary>
            发送消息给聊天室的用户
            </summary>
            <param name="room">聊天室(群)</param>
            <param name="userId">用户Id from JwtRegisteredClaimNames.Sid</param>
            <param name="message">发送的消息</param>
            <param name="method">发送消息+事件方法</param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.Leave(System.String)">
            <summary>
            离开聊天室
            </summary>
            <param name="room">聊天室(群)</param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.OnConnectedAsync">
            <summary>
            连接事件
            </summary>
            <returns>throw Clients "onError"</returns>
        </member>
        <member name="M:WebFramework.SignalR.ChatHub.OnDisconnectedAsync(System.Exception)">
            <summary>
            断开事件
            </summary>
            <param name="exception"></param>
            <returns>throw Clients "onError"</returns>
        </member>
        <member name="T:WebFramework.SignalR.Message">
            <summary>
            聊天消息
            </summary>
        </member>
        <member name="P:WebFramework.SignalR.Message.Id">
            <summary>
            消息Id
            </summary>
        </member>
        <member name="P:WebFramework.SignalR.Message.Content">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:WebFramework.SignalR.Message.From">
            <summary>
            消息来源
            </summary>
        </member>
        <member name="P:WebFramework.SignalR.Message.Time">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="T:WebFramework.SignalR.ChatMessage">
            <summary>
            聊天消息管理
            </summary>
        </member>
        <member name="M:WebFramework.SignalR.ChatMessage.Add(System.String,WebFramework.SignalR.Message)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.SignalR.ChatMessage.Get(System.String,System.Int32)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.SignalR.ChatUser">
            <summary>
            聊天用户
            </summary>
        </member>
        <member name="P:WebFramework.SignalR.ChatUser.Room">
            <summary>
            聊天室(群)
            from Query["room"]
            </summary>
        </member>
        <member name="T:WebFramework.SignalR.RoomUser">
            <summary>
            消息群用户
            </summary>
        </member>
        <member name="P:WebFramework.SignalR.RoomUser.Id">
            <summary>
            用户Id from Sid
            </summary>
        </member>
        <member name="P:WebFramework.SignalR.RoomUser.Room">
            <summary>
            聊天室(群)
            from Query["room"]
            </summary>
        </member>
        <member name="T:WebFramework.SignalR.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:WebFramework.SignalR.User.Id">
            <summary>
            用户Id
            from JwtRegisteredClaimNames.Sid
            </summary>
        </member>
        <member name="P:WebFramework.SignalR.User.Name">
            <summary>
            用户名
            from JwtRegisteredClaimNames.Sub
            </summary>
        </member>
        <member name="P:WebFramework.SignalR.User.Role">
            <summary>
            角色(类别)
            from JwtSettings.RoleClaimType
            </summary>
        </member>
        <member name="P:WebFramework.SignalR.User.Device">
            <summary>
            设备标识
            from Query["device"]
            </summary>
        </member>
        <member name="T:WebFramework.SignalR.HubCallerContextChatUserExtensions">
            <summary>
            Gets the chat user from the hub caller connection.
            </summary>
        </member>
        <member name="M:WebFramework.SignalR.HubCallerContextChatUserExtensions.GetChatUser(Microsoft.AspNetCore.SignalR.HubCallerContext)">
            <summary>
            Gets the chat user from the hub caller connection.
            </summary>
            <param name="Context">A context abstraction for accessing information.</param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.HubCallerContextChatUserExtensions.GetUser(Microsoft.AspNetCore.SignalR.HubCallerContext)">
            <summary>
            Gets the user from the hub caller connection.
            </summary>
            <param name="Context">A context abstraction for accessing information.</param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.HubCallerContextChatUserExtensions.GetId(Microsoft.AspNetCore.SignalR.HubCallerContext)">
            <summary>
            Gets user id or User.Identity.Name.
            </summary>
            <param name="Context"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.HubCallerContextChatUserExtensions.GetName(Microsoft.AspNetCore.SignalR.HubCallerContext)">
            <summary>
            Gets user name.
            </summary>
            <param name="Context"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.HubCallerContextChatUserExtensions.GetRole(Microsoft.AspNetCore.SignalR.HubCallerContext)">
            <summary>
            Gets user role.
            </summary>
            <param name="Context"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.HubCallerContextChatUserExtensions.GetDevice(Microsoft.AspNetCore.SignalR.HubCallerContext)">
            <summary>
            Gets user device.
            </summary>
            <param name="Context"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.HubCallerContextChatUserExtensions.GetRoom(Microsoft.AspNetCore.SignalR.HubCallerContext)">
            <summary>
            Gets the chat room.
            </summary>
            <param name="Context"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.SignalR.HubCallerContextChatUserExtensions.GetIdAndDevice(Microsoft.AspNetCore.SignalR.HubCallerContext)">
            <summary>
            Gets user id and device.
            </summary>
            <param name="Context"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.Startup">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Startup.Run``1(System.String[])">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Startup.ConfigServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Startup.ConfigApp(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Startup.UseEndpointsMaps(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>ApiController Endpoints Maps</summary>
        </member>
        <member name="T:WebFramework.DisableFormModelBindingAttribute">
            <summary>
            Attribute for File Upload Controller
            </summary>
        </member>
        <member name="M:WebFramework.DisableFormModelBindingAttribute.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.DisableFormModelBindingAttribute.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.HttpRequestExtensions">
            <summary>
            HttpRequest Extensions for File Upload Action
            </summary>
        </member>
        <member name="M:WebFramework.HttpRequestExtensions.UploadFile(Microsoft.AspNetCore.Http.HttpRequest,System.Func{Microsoft.AspNetCore.Http.IFormFile,System.Threading.Tasks.Task})">
            <summary>
            File Upload Action
            </summary>
        </member>
        <member name="T:WebFramework.MultipartFile">
            <summary></summary>
        </member>
        <member name="P:WebFramework.MultipartFile.ContentType">
            <summary></summary>
        </member>
        <member name="P:WebFramework.MultipartFile.ContentDisposition">
            <summary></summary>
        </member>
        <member name="P:WebFramework.MultipartFile.Headers">
            <summary></summary>
        </member>
        <member name="P:WebFramework.MultipartFile.Length">
            <summary></summary>
        </member>
        <member name="P:WebFramework.MultipartFile.Name">
            <summary></summary>
        </member>
        <member name="P:WebFramework.MultipartFile.FileName">
            <summary></summary>
        </member>
        <member name="M:WebFramework.MultipartFile.#ctor(System.IO.Stream,System.String,System.String)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.MultipartFile.CopyTo(System.IO.Stream)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.MultipartFile.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.MultipartFile.OpenReadStream">
            <summary></summary>
        </member>
        <member name="T:WebFramework.MultipartRequestHelper">
            <summary></summary>
        </member>
        <member name="M:WebFramework.MultipartRequestHelper.GetBoundary(Microsoft.Net.Http.Headers.MediaTypeHeaderValue,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.MultipartRequestHelper.IsMultipartContentType(System.String)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.MultipartSectionExtensions">
            <summary></summary>
        </member>
        <member name="M:WebFramework.MultipartSectionExtensions.GetEncoding(Microsoft.AspNetCore.WebUtilities.MultipartSection)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Weixins.Data.MP">
            <summary>
            微信公众号
            </summary>
        </member>
        <member name="F:WebFramework.Weixins.Data.MP.RootPath">
            <summary>
            根目录
            </summary>
        </member>
        <member name="F:WebFramework.Weixins.Data.MP.SubscribeRequestReply">
            <summary>
            被关注回复
            </summary>
        </member>
        <member name="F:WebFramework.Weixins.Data.MP.TextRequestReply">
            <summary>
            文本消息的请求回复内容 /根目录/*.json
            </summary>
        </member>
        <member name="M:WebFramework.Weixins.Data.MP.Init(System.String)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Weixins.Data.MP.SetTextRequestReply(WebFramework.Weixins.DTO.RequestReplyDTO)">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Weixins.Data.MP.SaveSubscribeStatus(System.String,System.Int32,System.String)">
            <summary>
            保存用户关注状态
            </summary>
            <param name="openid"></param>
            <param name="subscribe">用户是否订阅该公众号标识，值为0时，代表此用户没有关注该公众号，拉取不到其余信息。</param>
            <param name="appid"></param>
        </member>
        <member name="T:WebFramework.Weixins.Data.WxOpen">
            <summary>
            微信小程序
            </summary>
        </member>
        <member name="F:WebFramework.Weixins.Data.WxOpen.RootPath">
            <summary>
            根目录
            </summary>
        </member>
        <member name="M:WebFramework.Weixins.Data.WxOpen.Init(System.String)">
            <summary></summary>
        </member>
        <member name="T:WebFramework.Weixins.DTO.AccessTokenInfo">
            <summary>
            统一的AccessToken信息
            </summary>
        </member>
        <member name="P:WebFramework.Weixins.DTO.AccessTokenInfo.Token">
            <summary>
            凭证信息
            </summary>
        </member>
        <member name="P:WebFramework.Weixins.DTO.AccessTokenInfo.Expire">
            <summary>
            凭证过期时间
            </summary>
        </member>
        <member name="T:WebFramework.Weixins.DTO.ImageDTO">
            <summary>
            图片
            </summary>
        </member>
        <member name="T:WebFramework.Weixins.DTO.NewsDTO">
            <summary>
            图文素材
            </summary>
        </member>
        <member name="T:WebFramework.Weixins.DTO.RequestReplyDTO">
            <summary>
            消息接收与回复
            </summary>
        </member>
        <member name="P:WebFramework.Weixins.DTO.RequestReplyDTO.keyword">
            <summary>
            输入keyword
            </summary>
        </member>
        <member name="P:WebFramework.Weixins.DTO.RequestReplyDTO.type">
            <summary>
            回复：图片（image）、图文（news）
            </summary>
        </member>
        <member name="P:WebFramework.Weixins.DTO.RequestReplyDTO.media_id">
            <summary>
            缓存 media
            </summary>
        </member>
        <member name="T:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageContext">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageContext.#ctor">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageContext.CustomMessageContext_MessageContextRemoved(System.Object,Senparc.NeuChar.Context.WeixinContextRemovedEventArgs{Senparc.NeuChar.Entities.IRequestMessageBase,Senparc.NeuChar.Entities.IResponseMessageBase})">
            <summary>
            当上下文过期，被移除时触发的时间
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler">
            <summary>
            自定义 微信公众号消息接收处理方法 MessageHandler
            </summary>
        </member>
        <member name="F:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.TemplateMessageCollection">
            <summary>
            模板消息集合（Key：checkCode，Value：OpenId）
            </summary>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnTextRequest(Senparc.Weixin.MP.Entities.RequestMessageText)">
            <summary>
            处理文字请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnLocationRequest(Senparc.Weixin.MP.Entities.RequestMessageLocation)">
            <summary>
            处理位置请求
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnImageRequest(Senparc.Weixin.MP.Entities.RequestMessageImage)">
            <summary>
            处理图片请求
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnVoiceRequest(Senparc.Weixin.MP.Entities.RequestMessageVoice)">
            <summary>
            处理语音请求
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnVideoRequest(Senparc.Weixin.MP.Entities.RequestMessageVideo)">
            <summary>
            处理视频请求
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.DefaultResponseMessage(Senparc.NeuChar.Entities.IRequestMessageBase)">
            <summary>
            处理链接消息请求
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_SubscribeRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Subscribe)">
            <summary>
            订阅（关注）事件
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_ScanRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Scan)">
            <summary>
            通过二维码扫描（关注）事件
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_UnsubscribeRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Unsubscribe)">
            <summary>
            退订（关注）事件
            实际上用户无法收到非订阅账号的消息，所以这里可以随便写。
            unsubscribe事件的意义在于及时删除网站应用中已经记录的OpenID绑定，消除冗余数据。并且关注用户流失的情况。
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_ClickRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Click)">
            <summary>
            点击事件
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_EnterRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Enter)">
            <summary>
            进入事件
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_LocationRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Location)">
            <summary>
            位置事件
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_ViewRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_View)">
            <summary>
            打开网页事件
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_MassSendJobFinishRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_MassSendJobFinish)">
            <summary>
            群发完成事件
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_ScancodePushRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Scancode_Push)">
            <summary>
            事件之扫码推事件(scancode_push)
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_ScancodeWaitmsgRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Scancode_Waitmsg)">
            <summary>
            事件之扫码推事件且弹出“消息接收中”提示框(scancode_waitmsg)
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_PicPhotoOrAlbumRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Pic_Photo_Or_Album)">
            <summary>
            事件之弹出拍照或者相册发图（pic_photo_or_album）
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_PicSysphotoRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Pic_Sysphoto)">
            <summary>
            事件之弹出系统拍照发图(pic_sysphoto)
            实际测试时发现微信并没有推送RequestMessageEvent_Pic_Sysphoto消息，只能接收到用户在微信中发送的图片消息。
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_PicWeixinRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Pic_Weixin)">
            <summary>
            事件之弹出微信相册发图器(pic_weixin)
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_LocationSelectRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_Location_Select)">
            <summary>
            事件之弹出地理位置选择器（location_select）
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomMessageHandlers.CustomMessageHandler.OnEvent_TemplateSendJobFinishRequest(Senparc.Weixin.MP.Entities.RequestMessageEvent_TemplateSendJobFinish)">
            <summary>
            事件之发送模板消息返回结果
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomThirdPartyMessageHandlers.CustomThirdPartyMessageHandler.OnComponentVerifyTicketRequest(Senparc.Weixin.Open.RequestMessageComponentVerifyTicket)">
            <summary>
            请求授权
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.CustomThirdPartyMessageHandlers.CustomThirdPartyMessageHandler.OnUnauthorizedRequest(Senparc.Weixin.Open.RequestMessageUnauthorized)">
            <summary>
            取消授权
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.Weixins.MessageHandlers.WxOpenMessageHandlers.CustomWxOpenMessageContext">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.WxOpenMessageHandlers.CustomWxOpenMessageContext.#ctor">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.WxOpenMessageHandlers.CustomWxOpenMessageContext.CustomMessageContext_MessageContextRemoved(System.Object,Senparc.NeuChar.Context.WeixinContextRemovedEventArgs{Senparc.NeuChar.Entities.IRequestMessageBase,Senparc.NeuChar.Entities.IResponseMessageBase})">
            <summary>
            当上下文过期，被移除时触发的时间
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:WebFramework.Weixins.MessageHandlers.WxOpenMessageHandlers.CustomWxOpenMessageHandler.OnTextRequestAsync(Senparc.Weixin.WxOpen.Entities.RequestMessageText)">
            <summary>
            处理文字请求
            </summary>
            <returns></returns>
        </member>
        <member name="T:WebFramework.Weixins.MessageTemplate.WeixinTemplate_ExceptionAlert">
            <summary>
            系统异常
            </summary>
        </member>
        <member name="T:WebFramework.Weixins.MessageTemplate.WxOpen.WxOpenTemplateMessage_Notice">
            <summary>
            系统通知
            </summary>
        </member>
        <member name="T:WebFramework.Weixins.MP.AccessToken">
            <summary>
            管理AccessToken
            </summary>
        </member>
        <member name="T:WebFramework.Weixins.MP.Material">
            <summary>
            管理图文素材
            </summary>
        </member>
        <member name="M:WebFramework.Weixins.MP.Material.Get``1(System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            获取图文素材
            </summary>
        </member>
        <member name="T:WebFramework.Weixins.MP.User">
            <summary>
            管理微信用户
            </summary>
        </member>
        <member name="M:WebFramework.Weixins.MP.User.IsSubscribe(System.String,System.String)">
            <summary>
            用户是否关注了公众号
            </summary>
            <param name="openid">用户的openid</param>
            <param name="appid"></param>
            <returns></returns>
        </member>
        <member name="T:WebFramework.Weixins.Services">
            <summary>
            微信配置：公众号、小程序、企业微信、微信支付、开放平台、代理参数等
            </summary>
        </member>
        <member name="M:WebFramework.Weixins.Services.AddWeixin(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Register services
            </summary>
        </member>
        <member name="M:WebFramework.Weixins.Services.UseWeixin(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
        </member>
        <member name="M:WebFramework.Weixins.Services.ConfigTraceLog">
            <summary>
            配置全局跟踪日志
            </summary>
        </member>
        <member name="T:WebFramework.Weixins.Server">
            <summary></summary>
        </member>
        <member name="M:WebFramework.Weixins.Server.GetMapPath(System.String)">
            <summary></summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.QQ.HttpContextExtensions">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.QQ.HttpContextExtensions.GetExternalQQLoginInfoAsync(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
             Get the external login information from qq provider.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationDefaults">
            <summary>
            Default values for QQ authentication.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationDefaults.AuthenticationScheme">
            <summary>
            Default value for <see cref="P:Microsoft.AspNetCore.Authentication.AuthenticationOptions.DefaultAuthenticateScheme"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationDefaults.DisplayName">
            <summary>
            Default value for <see cref="!:RemoteAuthenticationOptions.DisplayName"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationDefaults.CallbackPath">
            <summary>
            Default value for <see cref="P:Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.CallbackPath"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationDefaults.Issuer">
            <summary>
            Default value for <see cref="!:AuthenticationOptions.ClaimsIssuer"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationHandler">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationHandler.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)">
            <summary>
             Last Step
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationHandler.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)">
            <summary>
             Step2：通过Authorization Code获取Access Token
             http://wiki.connect.qq.com/%E4%BD%BF%E7%94%A8authorization_code%E8%8E%B7%E5%8F%96access_token
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationHandler.ObtainUserOpenIdAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)">
            <summary>
             Step3：通过Access Token获取OpenId
            </summary>
            <param name="tokens"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationHandler.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)">
            <summary>
             Step1：获取Authorization Code
             构建请求地址
            </summary>
            <param name="properties"></param>
            <param name="redirectUri"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationOptions">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationOptions.OpenIdEndpoint">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationOptions.#ctor">
            <summary></summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WeChat.HttpContextExtensions">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.HttpContextExtensions.GetExternalWeChatLoginInfoAsync(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
             Get the external login information from weixin provider.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationDefaults">
            <summary>
            Default values for WeChat authentication.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationDefaults.AuthenticationScheme">
            <summary>
            Default value for <see cref="P:Microsoft.AspNetCore.Authentication.AuthenticationOptions.DefaultAuthenticateScheme"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationDefaults.DisplayName">
            <summary>
            Default value for <see cref="T:Microsoft.Extensions.DependencyInjection.WeChatAuthenticationExtensions"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationDefaults.CallbackPath">
            <summary>
            Default value for <see cref="P:Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.CallbackPath"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationDefaults.Issuer">
            <summary>
            Default value for <see cref="P:Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ClaimsIssuer"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationDefaults.AuthorizationEndpoint">
            <summary>
            Default value for <see cref="P:Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.AuthorizationEndpoint"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationDefaults.TokenEndpoint">
            <summary>
            Default value for <see cref="P:Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.TokenEndpoint"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationDefaults.UserInformationEndpoint">
            <summary>
            Default value for <see cref="P:Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.UserInformationEndpoint"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHandler.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)">
            <summary>
             Last step:
             create ticket from remote server
            </summary>
            <param name="identity"></param>
            <param name="properties"></param>
            <param name="tokens"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHandler.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)">
            <summary>
            Step 2：通过code获取access_token
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHandler.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)">
            <summary>
             Step 1：请求CODE
             构建用户授权地址
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHelper">
            <summary>
            Contains static methods that allow to extract user's information from a <see cref="T:Newtonsoft.Json.Linq.JObject"/>
            instance retrieved from weixin after a successful authentication process.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHelper.GetOpenId(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Gets the user identifier.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHelper.GetNickname(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Gets the nickname associated with the user profile.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHelper.GetSex(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Gets the gender associated with the user profile.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHelper.GetProvince(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Gets the province associated with the user profile.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHelper.GetCity(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Gets the city associated with the user profile.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHelper.GetCountry(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Gets the country associated with the user profile.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHelper.GetHeadimgUrl(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Gets the avatar image url associated with the user profile.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHelper.GetUnionid(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Gets the union id associated with the application.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHelper.GetPrivilege(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Gets the privilege associated with the user profile.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationOptions">
            <summary>
            Defines a set of options used by <see cref="T:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationHandler"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationOptions.#ctor">
            <summary></summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginDefaults">
            <summary>
            微信小程序登录校验的默认设置
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginDefaults.AuthenticationScheme">
            <summary>
            Default value for <see cref="P:Microsoft.AspNetCore.Authentication.AuthenticationOptions.DefaultAuthenticateScheme"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginDefaults.DisplayName">
            <summary>
            Default value for <see cref="P:Microsoft.AspNetCore.Authentication.AuthenticationOptions.DefaultScheme"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginDefaults.CallbackPath">
            <summary>
            Default value for <see cref="P:Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.CallbackPath"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginDefaults.Issuer">
            <summary>
            Default value for <see cref="P:Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions.ClaimsIssuer"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginDefaults.AuthorizationEndpoint">
            <summary>
            微信小程序服务端验证地址 for <see cref="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginHandler"/>.
            https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/login/auth.code2Session.html
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginEvents">
            <summary>
            微信小程序远程服务器身份验证的生命周期事件
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginEvents.OnWxOpenServerCompleted">
            <summary>
            微信服务端验证完成后触发,注册该方法获取用户信息.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginEvents.WxOpenServerCompleted(Microsoft.AspNetCore.Authentication.WxOpen.WxOpenServerResultContext)">
            <summary>
            微信服务端验证完成后将会调用该方法.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginHandler">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock)">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginHandler.HandleRemoteAuthenticateAsync">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginHandler.ExchangeCodeAsync(System.String)">
            <summary></summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions">
            <summary></summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions.AppId">
            <summary>
            微信小程序 appId【请注意该信息的安全性,避免下发至客户端】
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions.Secret">
            <summary>
            微信小程序 appSecret【请注意该信息的安全性,避免下发至客户端】
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions.GrantType">
            <summary>
            微信授权类型, 默认: authorization_code
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions.JsQuery">
            <summary>
            从微信服务器换取用户信息, 携带小程序客户端获取到的参数, 默认值: code
            
            <para>
                该值需要配合参数 CallbackPath, 默认: <see cref="F:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginDefaults.CallbackPath"/>.
                则"https://YourDomainName/signin-wxopen?code=xxx"为验证地址,而xxx则会被传递至微信服务器进行验证.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions.CustomerLoginState">
            <summary>
            根据微信服务器返回的会话密匙执行登录成功的操作, 比如颁发JWT, 重定向Action等
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions.CacheExpiration">
            <summary>
            缓存过期时间, 默认：1天
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions.Events">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginEvents"/> used to handle authentication events.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions.#ctor">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions.Validate">
            <summary></summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginStateContext">
            <summary>
            用户进行登录操作时所需要的上下文信息
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginStateContext.SessionInfoKey">
            <summary>
            微信服务端返回的密匙保存在缓存中关联的Key
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenServerResultContext">
            <summary>
            微信服务器返回的信息以及当前验证处理的上下文信息【会话密钥】
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenServerResultContext.SessionKey">
            <summary>
            会话密钥【请注意该信息的安全性,不要下发至客户端】
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenServerResultContext.OpenId">
            <summary>
            用户唯一标识【请注意该信息的安全性,不要下发至客户端】
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenServerResultContext.UnionId">
            <summary>
            用户在开放平台的唯一标识符，在满足UnionId下发条件的情况下会返回【请注意该信息的安全性,不要下发至客户端】
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenServerResultContext.ErrCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenServerResultContext.ErrMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginStateInfoStore">
            <summary>
            保存微信服务端返回的OpenId,Sessionkey等信息到缓存.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginStateInfoStore.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache)">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginStateInfoStore.GetSessionInfo(System.String)">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginStateInfoStore.RemoveAsync(System.String)">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginStateInfoStore.RenewAsync(System.String,Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginSessionInfo,Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions)">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginStateInfoStore.StoreAsync(Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginSessionInfo,Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions)">
            <summary></summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WxOpen.IWxOpenLoginStateInfoStore">
            <summary>
            保存微信服务端返回的Sessionkey等信息到缓存.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.IWxOpenLoginStateInfoStore.StoreAsync(Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginSessionInfo,Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions)">
            <summary>
            保存<see cref="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginSessionInfo"/>,并且返回所关联的Key。
            </summary>
            <param name="sessionInfo"><see cref="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginSessionInfo"/></param>
            <param name="currentOption">当前的微信验证配置信息</param>
            <returns>与该seesionInfo所关联的Key信息</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.IWxOpenLoginStateInfoStore.RenewAsync(System.String,Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginSessionInfo,Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions)">
            <summary>
            刷新当前Key的所对应的信息。
            </summary>
            <param name="key"></param>
            <param name="sessionInfo"><see cref="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginSessionInfo"/></param>
            <param name="currentOption">当前的微信验证配置信息</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.IWxOpenLoginStateInfoStore.RemoveAsync(System.String)">
            <summary>
            根据Key来移除缓存中的结果。
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.IWxOpenLoginStateInfoStore.GetSessionInfo(System.String)">
            <summary>
            根据Key来获取对应的<see cref="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginSessionInfo"/>。
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginSessionInfo">
            <summary>
            微信服务端返回的密匙信息.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginSessionInfo.OpenId">
            <summary>
            用户唯一标识
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginSessionInfo.SessionKey">
            <summary>
            会话密钥
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostConfigureOptions">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostConfigureOptions.#ctor(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider)">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostConfigureOptions.PostConfigure(System.String,Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions)">
            <summary></summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostResponse">
            <summary>
            微信小程序登录凭证校验后返回的结果
            https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/login/auth.code2Session.html
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostResponse.SessionKey">
            <summary>
            会话密钥【请注意该信息的安全性,不要下发至客户端】
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostResponse.OpenId">
            <summary>
            用户唯一标识【请注意该信息的安全性,不要下发至客户端】
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostResponse.UnionId">
            <summary>
            用户在开放平台的唯一标识符，在满足UnionId下发条件的情况下会返回【请注意该信息的安全性,不要下发至客户端】
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostResponse.ErrCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostResponse.ErrMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostResponse.Error">
            <summary></summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostResponse.Response">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostResponse.Success(System.Text.Json.JsonDocument)">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostResponse.Failed(System.Exception)">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostResponse.GetString(System.Text.Json.JsonElement,System.String)">
            <summary></summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.WxOpen.WxOpenPostResponse.Dispose">
            <summary></summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.QQAuthenticationExtensions">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.QQAuthenticationExtensions.AddQQAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.QQAuthenticationExtensions.AddQQAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationOptions})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.QQAuthenticationExtensions.AddQQAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationOptions})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.QQAuthenticationExtensions.AddQQAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{Microsoft.AspNetCore.Authentication.QQ.QQAuthenticationOptions})">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.WeChatAuthenticationExtensions">
            <summary></summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.WeChatAuthenticationExtensions.AddWeixinAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary></summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.WeChatAuthenticationExtensions.AddWeixinAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationOptions})">
            <summary></summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.WeChatAuthenticationExtensions.AddWeixinAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationOptions})">
            <summary></summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.WeChatAuthenticationExtensions.AddWeixinAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{Microsoft.AspNetCore.Authentication.WeChat.WeChatAuthenticationOptions})">
            <summary></summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.WxOpenExtensions">
            <summary></summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.WxOpenExtensions.AddWeixinMiniProgramAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions})">
            <summary></summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.WxOpenExtensions.AddWeixinMiniProgramAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions})">
            <summary></summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.WxOpenExtensions.AddWeixinMiniProgramAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{Microsoft.AspNetCore.Authentication.WxOpen.WxOpenLoginOptions})">
            <summary></summary>
        </member>
    </members>
</doc>
